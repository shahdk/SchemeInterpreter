Chez Scheme Transcript [Fri May 03 19:44:22 2013]
> (rep)
1>>>(load "main.ss")
()
1>>>(load "parser.ss")
()
1>>>(load "interpreter.ss")
()
1>>>(load "environment.ss")
()
1>>>(rep)
2>>>(load "main.ss")
()
2>>>(load "parser.ss")
()
2>>>(load "interpreter.ss")
()
2>>>(load "environment.ss")
()
2>>>(rep)
3>>>(load "main.ss")
()
3>>>(load "parser.ss")
()
3>>>(load "interpreter.ss")
()
3>>>(load "environment.ss")
()
3>>>(rep)
4>>>(exit)

Exception in display: #<void> is not a textual output port
Type (debug) to enter the debugger.
> global-env
(((rep) ()) ((rep) ())
 (apply-global-env
   (closure-record
     (sym)
     (app-exp
       (lambda-exp
         (ele)
         (begin-exp
           ((if-exp
              (var-exp ele)
              (app-exp (var-exp cadr) ((var-exp ele)))
              (app-exp () ())))))
       ((app-exp
          (var-exp assq)
          ((var-exp sym) (var-exp global-env)))))
     ()))
 (extend-global-env
   (closure-record
     (sym val)
     (if-exp
       (app-exp
         (var-exp assq)
         ((var-exp sym) (var-exp global-env)))
       (app-exp
         (var-exp set-cdr!)
         ((app-exp
            (var-exp assq)
            ((var-exp sym) (var-exp global-env)))
           (app-exp (var-exp list) ((var-exp val)))))
       (set!-exp
         global-env
         (app-exp
           (var-exp cons)
           ((app-exp
              (var-exp cons)
              ((var-exp sym) (app-exp (var-exp list) ((var-exp val)))))
             (var-exp global-env)))))
     ()))
 (make-indices
   (closure-record
     (n accu)
     (if-exp
       (app-exp (var-exp =) ((var-exp n) (lit-exp 0)))
       (app-exp (var-exp cons) ((lit-exp 0) (var-exp accu)))
       (app-exp
         (var-exp make-indices)
         ((app-exp (var-exp -) ((var-exp n) (lit-exp 1)))
           (app-exp (var-exp cons) ((var-exp n) (var-exp accu))))))
     ()))
 (change-env
   (closure-record
     (env sym val)
     (if-exp
       (app-exp
         (lambda-exp
           (sys-var tempVal)
           (if-exp
             (var-exp (sys-var tempVal))
             (var-exp (sys-var tempVal))
             (app-exp
               (var-exp null?)
               ((app-exp (var-exp car) ((var-exp env)))))))
         ((app-exp (var-exp null?) ((var-exp env)))))
       (app-exp
         (var-exp extend-global-env)
         ((var-exp sym) (var-exp val)))
       (app-exp
         (lambda-exp
           (syms vals env)
           (begin-exp
             ((app-exp
                (lambda-exp
                  (pos)
                  (begin-exp
                    ((if-exp
                       (app-exp (var-exp number?) ((var-exp pos)))
                       (app-exp
                         (var-exp vector-set!)
                         ((var-exp vals) (var-exp pos) (var-exp val)))
                       (app-exp
                         (var-exp change-env)
                         ((var-exp env) (var-exp sym) (var-exp val)))))))
                ((app-exp
                   (var-exp find-position)
                   ((var-exp sym) (var-exp syms))))))))
         ((app-exp (var-exp caar) ((var-exp env)))
           (app-exp (var-exp cdar) ((var-exp env)))
           (app-exp (var-exp cdr) ((var-exp env))))))
     ()))
 (improper->proper
   (closure-record
     (p)
     (if-exp
       (app-exp
         (var-exp not)
         ((app-exp (var-exp pair?) ((var-exp p)))))
       (app-exp (var-exp cons) ((var-exp p) (lit-exp ())))
       (app-exp
         (var-exp cons)
         ((app-exp (var-exp car) ((var-exp p)))
           (app-exp
             (var-exp improper->proper)
             ((app-exp (var-exp cdr) ((var-exp p))))))))
     ()))
 (environment?
   (closure-record
     (env)
     (if-exp
       (app-exp
         (lambda-exp
           (sys-var tempVal)
           (if-exp
             (var-exp (sys-var tempVal))
             (var-exp (sys-var tempVal))
             (app-exp
               (var-exp null?)
               ((app-exp (var-exp car) ((var-exp env)))))))
         ((app-exp (var-exp null?) ((var-exp env)))))
       (lit-exp #t)
       (if-exp
         (lit-exp #t)
         (if-exp
           (app-exp
             (lambda-exp
               (sys-var tempVal)
               (if-exp
                 (var-exp (sys-var tempVal))
                 (var-exp (sys-var tempVal))
                 (app-exp
                   (app-exp (var-exp list-of) ((var-exp symbol?)))
                   ((app-exp (var-exp caar) ((var-exp env)))))))
             ((app-exp
                (app-exp (var-exp list-of) ((var-exp null?)))
                ((app-exp (var-exp caar) ((var-exp env)))))))
           (if-exp
             (app-exp
               (var-exp vector?)
               ((app-exp (var-exp cdar) ((var-exp env)))))
             (app-exp
               (var-exp environment?)
               ((app-exp (var-exp cdr) ((var-exp env)))))
             (lit-exp #f))
           (lit-exp #f))
         ()))
     ()))
 (find-position
   (closure-record
     (sym ls)
     (if-exp
       (app-exp (var-exp null?) ((var-exp ls)))
       (lit-exp #f)
       (if-exp
         (app-exp
           (var-exp equal?)
           ((var-exp sym) (app-exp (var-exp car) ((var-exp ls)))))
         (lit-exp 0)
         (if-exp
           (lit-exp #t)
           (app-exp
             (lambda-exp
               (index)
               (begin-exp
                 ((if-exp
                    (app-exp (var-exp number?) ((var-exp index)))
                    (app-exp (var-exp +) ((var-exp index) (lit-exp 1)))
                    (lit-exp #f)))))
             ((app-exp
                (var-exp find-position)
                ((var-exp sym) (app-exp (var-exp cdr) ((var-exp ls)))))))
           ())))
     ()))
 (apply-env-improper
   (closure-record
     (len vals)
     (if-exp
       (app-exp (var-exp =) ((var-exp len) (lit-exp 1)))
       (app-exp (var-exp list) ((var-exp vals)))
       (if-exp
         (lit-exp #t)
         (app-exp
           (var-exp append)
           ((app-exp
              (var-exp list)
              ((app-exp (var-exp car) ((var-exp vals)))))
             (app-exp
               (var-exp apply-env-improper)
               ((app-exp (var-exp -) ((var-exp len) (lit-exp 1)))
                 (app-exp (var-exp cdr) ((var-exp vals)))))))
         ()))
     ()))
 (add-to-env
   (closure-record
     (symbols values env)
     (begin-exp
       ((app-exp
          (var-exp set-cdr!)
          ((app-exp (var-exp car) ((var-exp env)))
            (app-exp
              (var-exp list->vector)
              ((app-exp
                 (var-exp cons)
                 ((var-exp values)
                   (app-exp
                     (var-exp vector->list)
                     ((app-exp (var-exp cdar) ((var-exp env)))))))))))
         (app-exp
           (var-exp set-car!)
           ((app-exp (var-exp car) ((var-exp env)))
             (app-exp
               (var-exp cons)
               ((var-exp symbols)
                 (app-exp (var-exp caar) ((var-exp env)))))))))
     ()))
 (apply-env
   (closure-record
     (env sym)
     (if-exp
       (app-exp
         (lambda-exp
           (sys-var tempVal)
           (if-exp
             (var-exp (sys-var tempVal))
             (var-exp (sys-var tempVal))
             (app-exp
               (var-exp null?)
               ((app-exp (var-exp car) ((var-exp env)))))))
         ((app-exp (var-exp null?) ((var-exp env)))))
       (app-exp (var-exp apply-global-env) ((var-exp sym)))
       (app-exp
         (lambda-exp
           (syms)
           (app-exp
             (lambda-exp
               (vals)
               (app-exp
                 (lambda-exp
                   (env)
                   (begin-exp
                     ((app-exp
                        (lambda-exp
                          (pos)
                          (begin-exp
                            ((if-exp
                               (app-exp (var-exp number?) ((var-exp pos)))
                               (app-exp
                                 (lambda-exp
                                   (temp)
                                   (begin-exp
                                     ((if-exp
                                        (app-exp
                                          (var-exp vector?)
                                          ((var-exp temp)))
                                        (app-exp
                                          (var-exp vector->list)
                                          ((var-exp temp)))
                                        (var-exp temp)))))
                                 ((app-exp
                                    (var-exp vector-ref)
                                    ((var-exp vals) (var-exp pos)))))
                               (app-exp
                                 (var-exp apply-env)
                                 ((var-exp env) (var-exp sym)))))))
                        ((app-exp
                           (var-exp find-position)
                           ((var-exp sym) (var-exp syms))))))))
                 ((app-exp (var-exp cdr) ((var-exp env))))))
             ((if-exp
                (app-exp
                  (var-exp =)
                  ((app-exp
                     (var-exp length)
                     ((app-exp (var-exp caar) ((var-exp env)))))
                    (lit-exp 2)))
                (if-exp
                  (app-exp
                    (var-exp eq?)
                    ((app-exp (var-exp caaar) ((var-exp env)))
                      (lit-exp variable)))
                  (app-exp
                    (var-exp vector)
                    ((app-exp (var-exp cadar) ((var-exp env)))))
                  (if-exp
                    (app-exp
                      (var-exp eq?)
                      ((app-exp (var-exp caaar) ((var-exp env)))
                        (lit-exp improper)))
                    (app-exp
                      (var-exp list->vector)
                      ((app-exp
                         (var-exp apply-env-improper)
                         ((app-exp (var-exp length) ((var-exp syms)))
                           (app-exp
                             (var-exp vector->list)
                             ((app-exp
                                (var-exp cadar)
                                ((var-exp env)))))))))
                    (if-exp
                      (lit-exp #t)
                      (app-exp
                        (var-exp cdr)
                        ((app-exp (var-exp car) ((var-exp env)))))
                      ())))
                (app-exp
                  (var-exp cdr)
                  ((app-exp (var-exp car) ((var-exp env)))))))))
         ((if-exp
            (app-exp
              (var-exp =)
              ((app-exp
                 (var-exp length)
                 ((app-exp (var-exp caar) ((var-exp env)))))
                (lit-exp 2)))
            (if-exp
              (app-exp
                (var-exp eq?)
                ((app-exp (var-exp caaar) ((var-exp env)))
                  (lit-exp variable)))
              (app-exp (var-exp cdaar) ((var-exp env)))
              (if-exp
                (app-exp
                  (var-exp eq?)
                  ((app-exp (var-exp caaar) ((var-exp env)))
                    (lit-exp improper)))
                (app-exp (var-exp cadaar) ((var-exp env)))
                (if-exp
                  (app-exp
                    (var-exp eq?)
                    ((app-exp (var-exp caaar) ((var-exp env)))
                      (lit-exp sys-var)))
                  (app-exp
                    (var-exp list)
                    ((app-exp (var-exp caar) ((var-exp env)))))
                  (if-exp
                    (lit-exp #t)
                    (app-exp
                      (var-exp car)
                      ((app-exp (var-exp car) ((var-exp env)))))
                    ()))))
            (app-exp
              (var-exp car)
              ((app-exp (var-exp car) ((var-exp env)))))))))
     ()))
 (extend-env
   (closure-record
     (syms vals env)
     (app-exp
       (var-exp cons)
       ((app-exp
          (var-exp cons)
          ((var-exp syms)
            (app-exp (var-exp list->vector) ((var-exp vals)))))
         (var-exp env)))
     ()))
 (empty-env (closure-record () (lit-exp ()) ()))
 (contains?
   (closure-record
     (el ls)
     (if-exp
       (app-exp (var-exp null?) ((var-exp ls)))
       (lit-exp #f)
       (if-exp
         (app-exp
           (var-exp equal?)
           ((var-exp el) (app-exp (var-exp car) ((var-exp ls)))))
         (lit-exp #t)
         (if-exp
           (lit-exp #t)
           (app-exp
             (var-exp contains?)
             ((var-exp el) (app-exp (var-exp cdr) ((var-exp ls)))))
           ())))
     ()))
 (global-env
   ((+ (primitive +)) (- (primitive -)) (* (primitive *))
    (/ (primitive /)) (add1 (primitive add1))
    (sub1 (primitive sub1)) (max (primitive max))
    (zero? (primitive zero?)) (not (primitive not))
    (= (primitive =)) (< (primitive <)) (> (primitive >))
    (<= (primitive <=)) (>= (primitive >=))
    (cons (primitive cons)) (list (primitive list))
    (null? (primitive null?)) (eq? (primitive eq?))
    (equal? (primitive equal?)) (atom? (primitive atom?))
    (length (primitive length))
    (list->vector (primitive list->vector))
    (list? (primitive list?)) (pair? (primitive pair?))
    (procedure? (primitive procedure?))
    (vector->list (primitive vector->list))
    (vector (primitive vector))
    (make-vector (primitive make-vector))
    (vector-ref (primitive vector-ref))
    (vector? (primitive vector?)) (number? (primitive number?))
    (symbol? (primitive symbol?))
    (set-car! (primitive set-car!))
    (set-cdr! (primitive set-cdr!))
    (vector-set! (primitive vector-set!)) (car (primitive car))
    (cdr (primitive cdr)) (caar (primitive caar))
    (cadr (primitive cadr)) (cdar (primitive cdar))
    (cddr (primitive cddr)) (caaar (primitive caaar))
    (load (primitive load)) (caadr (primitive caadr))
    (cadar (primitive cadar)) (cdaar (primitive cdaar))
    (cdddr (primitive cdddr)) (cddar (primitive cddar))
    (cdadr (primitive cdadr)) (caddr (primitive caddr))
    (map (primitive map)) (apply (primitive apply))
    (assq (primitive assq)) (assv (primitive assv))
    (append (primitive append))))
 (primitive-proc
   (+ - * / add1 sub1 max zero? not = < > <= >= cons list null?
    eq? equal? atom? length list->vector list? pair? procedure?
    vector->list vector make-vector vector-ref vector? number?
    symbol? set-car! set-cdr! vector-set! car cdr caar cadr cdar
    cddr caaar load caadr cadar cdaar cdddr cddar cdadr caddr
    map apply assq assv append))
 (letrec-check-helper
   (closure-record
     (el ls)
     (if-exp
       (app-exp
         (lambda-exp
           (sys-var tempVal)
           (if-exp
             (var-exp (sys-var tempVal))
             (var-exp (sys-var tempVal))
             (app-exp (var-exp null?) ((var-exp ls)))))
         ((app-exp (var-exp atom?) ((var-exp ls)))))
       (lit-exp #f)
       (if-exp
         (app-exp
           (var-exp equal?)
           ((app-exp (var-exp car) ((var-exp ls)))
             (lit-exp lambda-exp)))
         (lit-exp #f)
         (if-exp
           (app-exp
             (var-exp equal?)
             ((app-exp (var-exp car) ((var-exp ls)))
               (lit-exp letrec-exp)))
           (if-exp
             (app-exp
               (var-exp letrec-check-helper)
               ((var-exp el) (app-exp (var-exp caddr) ((var-exp ls)))))
             (lit-exp #t)
             (if-exp
               (app-exp
                 (var-exp letrec-check-helper)
                 ((var-exp el) (app-exp (var-exp cadddr) ((var-exp ls)))))
               (app-exp
                 (var-exp not)
                 ((app-exp
                    (var-exp contains?)
                    ((app-exp (var-exp cadr) ((var-exp el)))
                      (app-exp (var-exp cadr) ((var-exp ls)))))))
               (lit-exp #f)))
           (if-exp
             (app-exp
               (var-exp equal?)
               ((var-exp el) (app-exp (var-exp car) ((var-exp ls)))))
             (lit-exp #t)
             (if-exp
               (app-exp
                 (var-exp null?)
                 ((app-exp (var-exp cdr) ((var-exp ls)))))
               (app-exp
                 (var-exp letrec-check-helper)
                 ((var-exp el) (app-exp (var-exp car) ((var-exp ls)))))
               (if-exp
                 (lit-exp #t)
                 (app-exp
                   (var-exp letrec-check-helper)
                   ((var-exp el) (app-exp (var-exp cdr) ((var-exp ls)))))
                 ()))))))
     ()))
 (letrec-check
   (closure-record
     (s1 s2)
     (if-exp
       (app-exp (var-exp null?) ((var-exp s1)))
       (lit-exp #f)
       (if-exp
         (app-exp
           (var-exp letrec-check-helper)
           ((app-exp
              (var-exp cons)
              ((lit-exp var-exp)
                (app-exp
                  (var-exp list)
                  ((app-exp (var-exp car) ((var-exp s1)))))))
             (var-exp s2)))
         (lit-exp #t)
         (if-exp
           (lit-exp #t)
           (app-exp
             (var-exp letrec-check)
             ((app-exp (var-exp cdr) ((var-exp s1))) (var-exp s2)))
           ())))
     ()))
 (extend-env-recur
   (closure-record
     (syms vals env)
     (app-exp
       (lambda-exp
         (vec)
         (app-exp
           (lambda-exp
             (new-env)
             (app-exp
               (lambda-exp
                 (pos-list)
                 (begin-exp
                   ((letrec-exp
                      (loop)
                      ((lambda-exp
                         (item pos)
                         (if-exp
                           (if-exp
                             (app-exp
                               (var-exp not)
                               ((app-exp
                                  (var-exp null?)
                                  ((var-exp item)))))
                             (app-exp
                               (var-exp procedure?)
                               ((app-exp (var-exp car) ((var-exp item)))))
                             (lit-exp #f))
                           (begin-exp
                             ((app-exp
                                (var-exp vector-set!)
                                ((var-exp vec)
                                  (app-exp (var-exp car) ((var-exp pos)))
                                  (if-exp
                                    (app-exp
                                      (var-exp equal?)
                                      ((var-exp closure-record)
                                        (app-exp
                                          (var-exp caar)
                                          ((var-exp item)))))
                                    (app-exp
                                      (var-exp list)
                                      ((lit-exp closure-record)
                                        (app-exp
                                          (var-exp car)
                                          ((app-exp
                                             (var-exp cdar)
                                             ((var-exp item)))))
                                        (app-exp
                                          (var-exp car)
                                          ((app-exp
                                             (var-exp cddar)
                                             ((var-exp item)))))
                                        (var-exp new-env)))
                                    (if-exp
                                      (app-exp
                                        (var-exp equal?)
                                        ((var-exp primitive)
                                          (app-exp
                                            (var-exp caar)
                                            ((var-exp item)))))
                                      (app-exp
                                        (var-exp car)
                                        ((var-exp item)))
                                      ()))))
                               (app-exp
                                 (var-exp loop)
                                 ((app-exp (var-exp cdr) ((var-exp item)))
                                   (app-exp
                                     (var-exp cdr)
                                     ((var-exp pos)))))))
                           ())))
                      (begin-exp
                        ((app-exp
                           (var-exp loop)
                           ((var-exp vals) (var-exp pos-list))))))
                     (var-exp new-env))))
               ((app-exp
                  (var-exp make-indices)
                  ((app-exp
                     (var-exp -)
                     ((app-exp (var-exp length) ((var-exp vals)))
                       (lit-exp 1)))
                    (lit-exp ()))))))
           ((app-exp
              (var-exp cons)
              ((app-exp (var-exp cons) ((var-exp syms) (var-exp vec)))
                (var-exp env))))))
       ((app-exp (var-exp list->vector) ((var-exp vals)))))
     ()))
 (reset-global-env
   (closure-record
     ()
     (set!-exp
       global-env
       (app-exp
         (var-exp map)
         ((lambda-exp
            (name)
            (app-exp
              (var-exp cons)
              ((var-exp name)
                (app-exp
                  (var-exp list)
                  ((app-exp
                     (var-exp list)
                     ((lit-exp primitive) (var-exp name))))))))
           (var-exp primitive-proc))))
     ()))
 (index-value
   (closure-record
     (index ls)
     (letrec-exp
       (index-helper)
       ((lambda-exp
          (index ls accum count)
          (if-exp
            (app-exp (var-exp null?) ((var-exp ls)))
            (var-exp accum)
            (if-exp
              (app-exp
                (var-exp list?)
                ((app-exp (var-exp car) ((var-exp ls)))))
              (app-exp
                (var-exp index-helper)
                ((var-exp index)
                  (app-exp (var-exp cdr) ((var-exp ls)))
                  (app-exp
                    (var-exp append)
                    ((var-exp accum)
                      (app-exp
                        (var-exp list)
                        ((app-exp
                           (var-exp index-helper)
                           ((var-exp index)
                             (app-exp (var-exp car) ((var-exp ls)))
                             (lit-exp ())
                             (lit-exp 0)))))))
                  (var-exp count)))
              (if-exp
                (lit-exp #t)
                (if-exp
                  (app-exp (var-exp eq?) ((var-exp index) (var-exp count)))
                  (app-exp (var-exp car) ((var-exp ls)))
                  (app-exp
                    (var-exp index-helper)
                    ((var-exp index)
                      (app-exp (var-exp cdr) ((var-exp ls)))
                      (lit-exp ())
                      (app-exp
                        (var-exp +)
                        ((var-exp count) (lit-exp 1))))))
                ())))))
       (begin-exp
         ((app-exp
            (var-exp index-helper)
            ((var-exp index) (var-exp ls) (lit-exp ()) (lit-exp 0))))))
     ()))
 (index-recur
   (closure-record
     (ls)
     (if-exp
       (app-exp
         (var-exp null?)
         ((app-exp (var-exp cdr) ((var-exp ls)))))
       (letrec-exp
         (loop)
         ((lambda-exp
            (ls accum)
            (if-exp
              (app-exp (var-exp null?) ((var-exp ls)))
              (var-exp accum)
              (app-exp
                (var-exp loop)
                ((app-exp (var-exp cdr) ((var-exp ls)))
                  (app-exp
                    (var-exp append)
                    ((var-exp accum)
                      (app-exp
                        (var-exp list)
                        ((app-exp
                           (var-exp list)
                           ((app-exp
                              (var-exp car)
                              ((var-exp ls))))))))))))))
         (begin-exp
           ((app-exp
              (var-exp loop)
              ((app-exp (var-exp car) ((var-exp ls))) (lit-exp ()))))))
       (app-exp
         (lambda-exp
           (size)
           (begin-exp
             ((letrec-exp
                (index-recur-helper)
                ((lambda-exp
                   (count)
                   (if-exp
                     (app-exp
                       (var-exp eq?)
                       ((var-exp count) (var-exp size)))
                     (app-exp
                       (var-exp list)
                       ((app-exp
                          (var-exp index-value)
                          ((var-exp count) (var-exp ls)))))
                     (if-exp
                       (lit-exp #t)
                       (app-exp
                         (var-exp append)
                         ((app-exp
                            (var-exp list)
                            ((app-exp
                               (var-exp index-value)
                               ((var-exp count) (var-exp ls)))))
                           (app-exp
                             (var-exp index-recur-helper)
                             ((app-exp
                                (var-exp +)
                                ((var-exp count) (lit-exp 1)))))))
                       ()))))
                (begin-exp
                  ((app-exp
                     (var-exp index-recur-helper)
                     ((lit-exp 0)))))))))
         ((app-exp
            (var-exp -)
            ((app-exp
               (var-exp length)
               ((app-exp (var-exp car) ((var-exp ls)))))
              (lit-exp 1))))))
     ()))
 (combine-arg
   (closure-record
     (ls)
     (if-exp
       (app-exp (var-exp null?) ((var-exp ls)))
       (lit-exp ())
       (if-exp
         (app-exp
           (var-exp list?)
           ((app-exp (var-exp car) ((var-exp ls)))))
         (app-exp
           (var-exp append)
           ((app-exp (var-exp car) ((var-exp ls)))
             (app-exp
               (var-exp combine-arg)
               ((app-exp (var-exp cdr) ((var-exp ls)))))))
         (if-exp
           (lit-exp #t)
           (app-exp
             (var-exp append)
             ((app-exp
                (var-exp list)
                ((app-exp (var-exp car) ((var-exp ls)))))
               (app-exp
                 (var-exp combine-arg)
                 ((app-exp (var-exp cdr) ((var-exp ls)))))))
           ())))
     ()))
 (apply-primitive-proc
   (closure-record
     (id arg)
     (if-exp
       (app-exp
         (var-exp equal?)
         ((app-exp (var-exp +) ()) (var-exp id)))
       (if-exp
         (app-exp
           (var-exp null?)
           ((app-exp (var-exp cdr) ((var-exp arg)))))
         (app-exp
           (var-exp +)
           ((lit-exp 0) (app-exp (var-exp car) ((var-exp arg)))))
         (if-exp
           (lit-exp #t)
           (app-exp (var-exp apply) ((var-exp +) (var-exp arg)))
           ()))
       (if-exp
         (app-exp
           (var-exp equal?)
           ((app-exp (var-exp -) ()) (var-exp id)))
         (if-exp
           (app-exp
             (var-exp null?)
             ((app-exp (var-exp cdr) ((var-exp arg)))))
           (app-exp
             (var-exp -)
             ((lit-exp 0) (app-exp (var-exp car) ((var-exp arg)))))
           (if-exp
             (lit-exp #t)
             (app-exp (var-exp apply) ((var-exp -) (var-exp arg)))
             ()))
         (if-exp
           (app-exp
             (var-exp equal?)
             ((app-exp (var-exp *) ()) (var-exp id)))
           (if-exp
             (app-exp
               (var-exp null?)
               ((app-exp (var-exp cdr) ((var-exp arg)))))
             (app-exp
               (var-exp *)
               ((lit-exp 1) (app-exp (var-exp car) ((var-exp arg)))))
             (if-exp
               (lit-exp #t)
               (app-exp (var-exp apply) ((var-exp *) (var-exp arg)))
               ()))
           (if-exp
             (app-exp
               (var-exp equal?)
               ((app-exp (var-exp /) ()) (var-exp id)))
             (if-exp
               (app-exp
                 (var-exp null?)
                 ((app-exp (var-exp cdr) ((var-exp arg)))))
               (app-exp
                 (var-exp /)
                 ((lit-exp 1) (app-exp (var-exp car) ((var-exp arg)))))
               (if-exp
                 (lit-exp #t)
                 (app-exp (var-exp apply) ((var-exp /) (var-exp arg)))
                 ()))
             (if-exp
               (app-exp
                 (var-exp equal?)
                 ((app-exp (var-exp add1) ()) (var-exp id)))
               (app-exp
                 (var-exp add1)
                 ((app-exp (var-exp car) ((var-exp arg)))))
               (if-exp
                 (app-exp
                   (var-exp equal?)
                   ((app-exp (var-exp sub1) ()) (var-exp id)))
                 (app-exp
                   (var-exp sub1)
                   ((app-exp (var-exp car) ((var-exp arg)))))
                 (if-exp
                   (app-exp
                     (var-exp equal?)
                     ((app-exp (var-exp zero?) ()) (var-exp id)))
                   (app-exp
                     (var-exp zero?)
                     ((app-exp (var-exp car) ((var-exp arg)))))
                   (if-exp
                     (app-exp
                       (var-exp equal?)
                       ((app-exp (var-exp not) ()) (var-exp id)))
                     (app-exp
                       (var-exp not)
                       ((app-exp (var-exp car) ((var-exp arg)))))
                     (if-exp
                       (app-exp
                         (var-exp equal?)
                         ((app-exp (var-exp =) ()) (var-exp id)))
                       (app-exp
                         (var-exp apply)
                         ((var-exp =) (var-exp arg)))
                       (if-exp
                         (app-exp
                           (var-exp equal?)
                           ((app-exp (var-exp <) ()) (var-exp id)))
                         (app-exp
                           (var-exp apply)
                           ((var-exp <) (var-exp arg)))
                         (if-exp
                           (app-exp
                             (var-exp equal?)
                             ((app-exp (var-exp >) ()) (var-exp id)))
                           (app-exp
                             (var-exp apply)
                             ((var-exp >) (var-exp arg)))
                           (if-exp
                             (app-exp
                               (var-exp equal?)
                               ((app-exp (var-exp <=) ()) (var-exp id)))
                             (app-exp
                               (var-exp apply)
                               ((var-exp <=) (var-exp arg)))
                             (if-exp
                               (app-exp
                                 (var-exp equal?)
                                 ((app-exp (var-exp >=) ()) (var-exp id)))
                               (app-exp
                                 (var-exp apply)
                                 ((var-exp >=) (var-exp arg)))
                               (if-exp
                                 (app-exp
                                   (var-exp equal?)
                                   ((app-exp (var-exp cons) ())
                                     (var-exp id)))
                                 (app-exp
                                   (var-exp cons)
                                   ((app-exp (var-exp car) ((var-exp arg)))
                                     (app-exp
                                       (var-exp cadr)
                                       ((var-exp arg)))))
                                 (if-exp
                                   (app-exp
                                     (var-exp equal?)
                                     ((app-exp (var-exp list) ())
                                       (var-exp id)))
                                   (var-exp arg)
                                   (if-exp
                                     (app-exp
                                       (var-exp equal?)
                                       ((app-exp (var-exp null?) ())
                                         (var-exp id)))
                                     (app-exp
                                       (var-exp null?)
                                       ((app-exp
                                          (var-exp car)
                                          ((var-exp arg)))))
                                     (if-exp
                                       (app-exp
                                         (var-exp equal?)
                                         ((app-exp (var-exp eq?) ())
                                           (var-exp id)))
                                       (app-exp
                                         (var-exp eq?)
                                         ((app-exp
                                            (var-exp car)
                                            ((var-exp arg)))
                                           (app-exp
                                             (var-exp cadr)
                                             ((var-exp arg)))))
                                       (if-exp
                                         (app-exp
                                           (var-exp equal?)
                                           ((app-exp (var-exp equal?) ())
                                             (var-exp id)))
                                         (app-exp
                                           (var-exp equal?)
                                           ((app-exp
                                              (var-exp car)
                                              ((var-exp arg)))
                                             (app-exp
                                               (var-exp cadr)
                                               ((var-exp arg)))))
                                         (if-exp
                                           (app-exp
                                             (var-exp equal?)
                                             ((app-exp (var-exp atom?) ())
                                               (var-exp id)))
                                           (app-exp
                                             (var-exp atom?)
                                             ((app-exp
                                                (var-exp car)
                                                ((var-exp arg)))))
                                           (if-exp
                                             (app-exp
                                               (var-exp equal?)
                                               ((app-exp
                                                  (var-exp length)
                                                  ())
                                                 (var-exp id)))
                                             (app-exp
                                               (var-exp length)
                                               ((app-exp
                                                  (var-exp car)
                                                  ((var-exp arg)))))
                                             (if-exp
                                               (app-exp
                                                 (var-exp equal?)
                                                 ((app-exp
                                                    (var-exp list->vector)
                                                    ())
                                                   (var-exp id)))
                                               (app-exp
                                                 (var-exp list->vector)
                                                 ((app-exp
                                                    (var-exp car)
                                                    ((var-exp arg)))))
                                               (if-exp
                                                 (app-exp
                                                   (var-exp equal?)
                                                   ((app-exp
                                                      (var-exp list?)
                                                      ())
                                                     (var-exp id)))
                                                 (app-exp
                                                   (var-exp list?)
                                                   ((app-exp
                                                      (var-exp car)
                                                      ((var-exp arg)))))
                                                 (if-exp
                                                   (app-exp
                                                     (var-exp equal?)
                                                     ((app-exp
                                                        (var-exp pair?)
                                                        ())
                                                       (var-exp id)))
                                                   (app-exp
                                                     (var-exp pair?)
                                                     ((app-exp
                                                        (var-exp car)
                                                        ((var-exp arg)))))
                                                   (if-exp
                                                     (app-exp
                                                       (var-exp equal?)
                                                       ((app-exp
                                                          (var-exp
                                                            procedure?)
                                                          ())
                                                         (var-exp id)))
                                                     (app-exp
                                                       (var-exp procedure?)
                                                       ((app-exp
                                                          (var-exp car)
                                                          ((var-exp
                                                             arg)))))
                                                     (if-exp
                                                       (app-exp
                                                         (var-exp equal?)
                                                         ((app-exp
                                                            (var-exp
                                                              vector->list)
                                                            ())
                                                           (var-exp id)))
                                                       (app-exp
                                                         (var-exp
                                                           vector->list)
                                                         ((app-exp
                                                            (var-exp car)
                                                            ((var-exp
                                                               arg)))))
                                                       (if-exp
                                                         (app-exp
                                                           (var-exp equal?)
                                                           ((app-exp
                                                              (var-exp
                                                                vector)
                                                              ())
                                                             (var-exp id)))
                                                         (app-exp
                                                           (var-exp apply)
                                                           ((var-exp
                                                              vector)
                                                             (var-exp
                                                               arg)))
                                                         (if-exp
                                                           (app-exp
                                                             (var-exp
                                                               equal?)
                                                             ((app-exp
                                                                (var-exp
                                                                  make-vector)
                                                                ())
                                                               (var-exp
                                                                 id)))
                                                           (app-exp
                                                             (var-exp
                                                               apply)
                                                             ((var-exp
                                                                make-vector)
                                                               (var-exp
                                                                 arg)))
                                                           (if-exp
                                                             (app-exp
                                                               (var-exp
                                                                 equal?)
                                                               ((app-exp
                                                                  (var-exp
                                                                    vector-ref)
                                                                  ())
                                                                 (var-exp
                                                                   id)))
                                                             (app-exp
                                                               (var-exp
                                                                 vector-ref)
                                                               ((app-exp
                                                                  (var-exp
                                                                    car)
                                                                  ((var-exp
                                                                     arg)))
                                                                 (app-exp
                                                                   (var-exp
                                                                     cadr)
                                                                   ((var-exp
                                                                      arg)))))
                                                             (if-exp
                                                               (app-exp
                                                                 (var-exp
                                                                   equal?)
                                                                 ((app-exp
                                                                    (var-exp
                                                                      vector?)
                                                                    ())
                                                                   (var-exp
                                                                     id)))
                                                               (app-exp
                                                                 (var-exp
                                                                   vector?)
                                                                 ((app-exp
                                                                    (var-exp
                                                                      car)
                                                                    ((var-exp
                                                                       arg)))))
                                                               (if-exp
                                                                 (app-exp
                                                                   (var-exp
                                                                     equal?)
                                                                   ((app-exp
                                                                      (var-exp
                                                                        number?)
                                                                      ())
                                                                     (var-exp
                                                                       id)))
                                                                 (app-exp
                                                                   (var-exp
                                                                     number?)
                                                                   ((app-exp
                                                                      (var-exp
                                                                        car)
                                                                      ((var-exp
                                                                         arg)))))
                                                                 (if-exp
                                                                   (app-exp
                                                                     (var-exp
                                                                       equal?)
                                                                     ((app-exp
                                                                        (var-exp
                                                                          symbol?)
                                                                        ())
                                                                       (var-exp
                                                                         id)))
                                                                   (app-exp
                                                                     (var-exp
                                                                       symbol?)
                                                                     ((app-exp
                                                                        (var-exp
                                                                          car)
                                                                        ((var-exp
                                                                           arg)))))
                                                                   (if-exp
                                                                     (app-exp
                                                                       (var-exp
                                                                         equal?)
                                                                       ((app-exp
                                                                          (var-exp
                                                                            set-car!)
                                                                          ())
                                                                         (var-exp
                                                                           id)))
                                                                     (app-exp
                                                                       (var-exp
                                                                         set-car!)
                                                                       ((app-exp
                                                                          (var-exp
                                                                            car)
                                                                          ((var-exp
                                                                             arg)))
                                                                         (app-exp
                                                                           (var-exp
                                                                             cadr)
                                                                           ((var-exp
                                                                              arg)))))
                                                                     (if-exp
                                                                       (app-exp
                                                                         (var-exp
                                                                           equal?)
                                                                         ((app-exp
                                                                            (var-exp
                                                                              set-cdr!)
                                                                            ())
                                                                           (var-exp
                                                                             id)))
                                                                       (app-exp
                                                                         (var-exp
                                                                           set-cdr!)
                                                                         ((app-exp
                                                                            (var-exp
                                                                              car)
                                                                            ((var-exp
                                                                               arg)))
                                                                           (app-exp
                                                                             (var-exp
                                                                               cadr)
                                                                             ((var-exp
                                                                                arg)))))
                                                                       (if-exp
                                                                         (app-exp
                                                                           (var-exp
                                                                             equal?)
                                                                           ((app-exp
                                                                              (var-exp
                                                                                vector-set!)
                                                                              ())
                                                                             (var-exp
                                                                               id)))
                                                                         (app-exp
                                                                           (var-exp
                                                                             vector-set!)
                                                                           ((app-exp
                                                                              (var-exp
                                                                                car)
                                                                              ((var-exp
                                                                                 arg)))
                                                                             (app-exp
                                                                               (var-exp
                                                                                 cadr)
                                                                               ((var-exp
                                                                                  arg)))
                                                                             (app-exp
                                                                               (var-exp
                                                                                 caddr)
                                                                               ((var-exp
                                                                                  arg)))))
                                                                         (if-exp
                                                                           (app-exp
                                                                             (var-exp
                                                                               equal?)
                                                                             ((app-exp
                                                                                (var-exp
                                                                                  car)
                                                                                ())
                                                                               (var-exp
                                                                                 id)))
                                                                           (app-exp
                                                                             (var-exp
                                                                               car)
                                                                             ((app-exp
                                                                                (var-exp
                                                                                  car)
                                                                                ((var-exp
                                                                                   arg)))))
                                                                           (if-exp
                                                                             (app-exp
                                                                               (var-exp
                                                                                 equal?)
                                                                               ((app-exp
                                                                                  (var-exp
                                                                                    cdr)
                                                                                  ())
                                                                                 (var-exp
                                                                                   id)))
                                                                             (app-exp
                                                                               (var-exp
                                                                                 cdr)
                                                                               ((app-exp
                                                                                  (var-exp
                                                                                    car)
                                                                                  ((var-exp
                                                                                     arg)))))
                                                                             (if-exp
                                                                               (app-exp
                                                                                 (var-exp
                                                                                   equal?)
                                                                                 ((app-exp
                                                                                    (var-exp
                                                                                      caar)
                                                                                    ())
                                                                                   (var-exp
                                                                                     id)))
                                                                               (app-exp
                                                                                 (var-exp
                                                                                   caar)
                                                                                 ((app-exp
                                                                                    (var-exp
                                                                                      car)
                                                                                    ((var-exp
                                                                                       arg)))))
                                                                               (if-exp
                                                                                 (app-exp
                                                                                   (var-exp
                                                                                     equal?)
                                                                                   ((app-exp
                                                                                      (var-exp
                                                                                        cadr)
                                                                                      ())
                                                                                     (var-exp
                                                                                       id)))
                                                                                 (app-exp
                                                                                   (var-exp
                                                                                     cadr)
                                                                                   ((app-exp
                                                                                      (var-exp
                                                                                        car)
                                                                                      ((var-exp
                                                                                         arg)))))
                                                                                 (if-exp
                                                                                   (app-exp
                                                                                     (var-exp
                                                                                       equal?)
                                                                                     ((app-exp
                                                                                        (var-exp
                                                                                          cdar)
                                                                                        ())
                                                                                       (var-exp
                                                                                         id)))
                                                                                   (app-exp
                                                                                     (var-exp
                                                                                       cdar)
                                                                                     ((app-exp
                                                                                        (var-exp
                                                                                          car)
                                                                                        ((var-exp
                                                                                           arg)))))
                                                                                   (if-exp
                                                                                     (app-exp
                                                                                       (var-exp
                                                                                         equal?)
                                                                                       ((app-exp
                                                                                          (var-exp
                                                                                            cddr)
                                                                                          ())
                                                                                         (var-exp
                                                                                           id)))
                                                                                     (app-exp
                                                                                       (var-exp
                                                                                         cddr)
                                                                                       ((app-exp
                                                                                          (var-exp
                                                                                            car)
                                                                                          ((var-exp
                                                                                             arg)))))
                                                                                     (if-exp
                                                                                       (app-exp
                                                                                         (var-exp
                                                                                           equal?)
                                                                                         ((app-exp
                                                                                            (var-exp
                                                                                              caaar)
                                                                                            ())
                                                                                           (var-exp
                                                                                             id)))
                                                                                       (app-exp
                                                                                         (var-exp
                                                                                           caaar)
                                                                                         ((app-exp
                                                                                            (var-exp
                                                                                              car)
                                                                                            ((var-exp
                                                                                               arg)))))
                                                                                       (if-exp
                                                                                         (app-exp
                                                                                           (var-exp
                                                                                             equal?)
                                                                                           ((app-exp
                                                                                              (var-exp
                                                                                                caadr)
                                                                                              ())
                                                                                             (var-exp
                                                                                               id)))
                                                                                         (app-exp
                                                                                           (var-exp
                                                                                             caadr)
                                                                                           ((app-exp
                                                                                              (var-exp
                                                                                                car)
                                                                                              ((var-exp
                                                                                                 arg)))))
                                                                                         (if-exp
                                                                                           (app-exp
                                                                                             (var-exp
                                                                                               equal?)
                                                                                             ((app-exp
                                                                                                (var-exp
                                                                                                  cadar)
                                                                                                ())
                                                                                               (var-exp
                                                                                                 id)))
                                                                                           (app-exp
                                                                                             (var-exp
                                                                                               cadar)
                                                                                             ((app-exp
                                                                                                (var-exp
                                                                                                  car)
                                                                                                ((var-exp
                                                                                                   arg)))))
                                                                                           (if-exp
                                                                                             (app-exp
                                                                                               (var-exp
                                                                                                 equal?)
                                                                                               ((app-exp
                                                                                                  (var-exp
                                                                                                    cdaar)
                                                                                                  ())
                                                                                                 (var-exp
                                                                                                   id)))
                                                                                             (app-exp
                                                                                               (var-exp
                                                                                                 cdaar)
                                                                                               ((app-exp
                                                                                                  (var-exp
                                                                                                    car)
                                                                                                  ((var-exp
                                                                                                     arg)))))
                                                                                             (if-exp
                                                                                               (app-exp
                                                                                                 (var-exp
                                                                                                   equal?)
                                                                                                 ((app-exp
                                                                                                    (var-exp
                                                                                                      cdddr)
                                                                                                    ())
                                                                                                   (var-exp
                                                                                                     id)))
                                                                                               (app-exp
                                                                                                 (var-exp
                                                                                                   cdddr)
                                                                                                 ((app-exp
                                                                                                    (var-exp
                                                                                                      car)
                                                                                                    ((var-exp
                                                                                                       arg)))))
                                                                                               (if-exp
                                                                                                 (app-exp
                                                                                                   (var-exp
                                                                                                     equal?)
                                                                                                   ((app-exp
                                                                                                      (var-exp
                                                                                                        cddar)
                                                                                                      ())
                                                                                                     (var-exp
                                                                                                       id)))
                                                                                                 (app-exp
                                                                                                   (var-exp
                                                                                                     cddar)
                                                                                                   ((app-exp
                                                                                                      (var-exp
                                                                                                        car)
                                                                                                      ((var-exp
                                                                                                         arg)))))
                                                                                                 (if-exp
                                                                                                   (app-exp
                                                                                                     (var-exp
                                                                                                       equal?)
                                                                                                     ((app-exp
                                                                                                        (var-exp
                                                                                                          cdadr)
                                                                                                        ())
                                                                                                       (var-exp
                                                                                                         id)))
                                                                                                   (app-exp
                                                                                                     (var-exp
                                                                                                       cdadr)
                                                                                                     ((app-exp
                                                                                                        (var-exp
                                                                                                          car)
                                                                                                        ((var-exp
                                                                                                           arg)))))
                                                                                                   (if-exp
                                                                                                     (app-exp
                                                                                                       (var-exp
                                                                                                         equal?)
                                                                                                       ((app-exp
                                                                                                          (var-exp
                                                                                                            caddr)
                                                                                                          ())
                                                                                                         (var-exp
                                                                                                           id)))
                                                                                                     (app-exp
                                                                                                       (var-exp
                                                                                                         caddr)
                                                                                                       ((app-exp
                                                                                                          (var-exp
                                                                                                            car)
                                                                                                          ((var-exp
                                                                                                             arg)))))
                                                                                                     (if-exp
                                                                                                       (app-exp
                                                                                                         (var-exp
                                                                                                           equal?)
                                                                                                         ((app-exp
                                                                                                            (var-exp
                                                                                                              map)
                                                                                                            ())
                                                                                                           (var-exp
                                                                                                             id)))
                                                                                                       (app-exp
                                                                                                         (var-exp
                                                                                                           map)
                                                                                                         ((lambda-exp
                                                                                                            (args)
                                                                                                            (app-exp
                                                                                                              (var-exp
                                                                                                                apply-proc)
                                                                                                              ((app-exp
                                                                                                                 (var-exp
                                                                                                                   car)
                                                                                                                 ((var-exp
                                                                                                                    arg)))
                                                                                                                (var-exp
                                                                                                                  args)
                                                                                                                (var-exp
                                                                                                                  global-env))))
                                                                                                           (app-exp
                                                                                                             (var-exp
                                                                                                               index-recur)
                                                                                                             ((app-exp
                                                                                                                (var-exp
                                                                                                                  cdr)
                                                                                                                ((var-exp
                                                                                                                   arg)))))))
                                                                                                       (if-exp
                                                                                                         (app-exp
                                                                                                           (var-exp
                                                                                                             equal?)
                                                                                                           ((app-exp
                                                                                                              (var-exp
                                                                                                                apply)
                                                                                                              ())
                                                                                                             (var-exp
                                                                                                               id)))
                                                                                                         (app-exp
                                                                                                           (var-exp
                                                                                                             apply-proc)
                                                                                                           ((app-exp
                                                                                                              (var-exp
                                                                                                                car)
                                                                                                              ((var-exp
                                                                                                                 arg)))
                                                                                                             (app-exp
                                                                                                               (var-exp
                                                                                                                 combine-arg)
                                                                                                               ((app-exp
                                                                                                                  (var-exp
                                                                                                                    cdr)
                                                                                                                  ((var-exp
                                                                                                                     arg)))))
                                                                                                             (var-exp
                                                                                                               global-env)))
                                                                                                         (if-exp
                                                                                                           (app-exp
                                                                                                             (var-exp
                                                                                                               equal?)
                                                                                                             ((app-exp
                                                                                                                (var-exp
                                                                                                                  assq)
                                                                                                                ())
                                                                                                               (var-exp
                                                                                                                 id)))
                                                                                                           (app-exp
                                                                                                             (var-exp
                                                                                                               assq)
                                                                                                             ((app-exp
                                                                                                                (var-exp
                                                                                                                  car)
                                                                                                                ((var-exp
                                                                                                                   arg)))
                                                                                                               (app-exp
                                                                                                                 (var-exp
                                                                                                                   cadr)
                                                                                                                 ((var-exp
                                                                                                                    arg)))))
                                                                                                           (if-exp
                                                                                                             (app-exp
                                                                                                               (var-exp
                                                                                                                 equal?)
                                                                                                               ((app-exp
                                                                                                                  (var-exp
                                                                                                                    assv)
                                                                                                                  ())
                                                                                                                 (var-exp
                                                                                                                   id)))
                                                                                                             (app-exp
                                                                                                               (var-exp
                                                                                                                 assv)
                                                                                                               ((app-exp
                                                                                                                  (var-exp
                                                                                                                    car)
                                                                                                                  ((var-exp
                                                                                                                     arg)))
                                                                                                                 (app-exp
                                                                                                                   (var-exp
                                                                                                                     cadr)
                                                                                                                   ((var-exp
                                                                                                                      arg)))))
                                                                                                             (if-exp
                                                                                                               (app-exp
                                                                                                                 (var-exp
                                                                                                                   equal?)
                                                                                                                 ((app-exp
                                                                                                                    (var-exp
                                                                                                                      append)
                                                                                                                    ())
                                                                                                                   (var-exp
                                                                                                                     id)))
                                                                                                               (app-exp
                                                                                                                 (letrec-exp
                                                                                                                   (f)
                                                                                                                   ((lambda-exp
                                                                                                                      (ls args)
                                                                                                                      (begin-exp
                                                                                                                        ((if-exp
                                                                                                                           (app-exp
                                                                                                                             (var-exp
                                                                                                                               null?)
                                                                                                                             ((var-exp
                                                                                                                                args)))
                                                                                                                           (var-exp
                                                                                                                             ls)
                                                                                                                           (app-exp
                                                                                                                             (letrec-exp
                                                                                                                               (g)
                                                                                                                               ((lambda-exp
                                                                                                                                  (ls)
                                                                                                                                  (begin-exp
                                                                                                                                    ((if-exp
                                                                                                                                       (app-exp
                                                                                                                                         (var-exp
                                                                                                                                           null?)
                                                                                                                                         ((var-exp
                                                                                                                                            ls)))
                                                                                                                                       (app-exp
                                                                                                                                         (var-exp
                                                                                                                                           f)
                                                                                                                                         ((app-exp
                                                                                                                                            (var-exp
                                                                                                                                              car)
                                                                                                                                            ((var-exp
                                                                                                                                               args)))
                                                                                                                                           (app-exp
                                                                                                                                             (var-exp
                                                                                                                                               cdr)
                                                                                                                                             ((var-exp
                                                                                                                                                args)))))
                                                                                                                                       (app-exp
                                                                                                                                         (var-exp
                                                                                                                                           cons)
                                                                                                                                         ((app-exp
                                                                                                                                            (var-exp
                                                                                                                                              car)
                                                                                                                                            ((var-exp
                                                                                                                                               ls)))
                                                                                                                                           (app-exp
                                                                                                                                             (var-exp
                                                                                                                                               g)
                                                                                                                                             ((app-exp
                                                                                                                                                (var-exp
                                                                                                                                                  cdr)
                                                                                                                                                ((var-exp
                                                                                                                                                   ls))))))))))))
                                                                                                                               (var-exp
                                                                                                                                 g))
                                                                                                                             ((var-exp
                                                                                                                                ls))))))))
                                                                                                                   (var-exp
                                                                                                                     f))
                                                                                                                 ((lit-exp
                                                                                                                    ())
                                                                                                                   (var-exp
                                                                                                                     arg)))
                                                                                                               (if-exp
                                                                                                                 (app-exp
                                                                                                                   (var-exp
                                                                                                                     equal?)
                                                                                                                   ((app-exp
                                                                                                                      (var-exp
                                                                                                                        max)
                                                                                                                      ())
                                                                                                                     (var-exp
                                                                                                                       id)))
                                                                                                                 (app-exp
                                                                                                                   (var-exp
                                                                                                                     apply)
                                                                                                                   ((var-exp
                                                                                                                      max)
                                                                                                                     (var-exp
                                                                                                                       arg)))
                                                                                                                 (if-exp
                                                                                                                   (app-exp
                                                                                                                     (var-exp
                                                                                                                       equal?)
                                                                                                                     ((app-exp
                                                                                                                        (var-exp
                                                                                                                          load)
                                                                                                                        ())
                                                                                                                       (var-exp
                                                                                                                         id)))
                                                                                                                   (app-exp
                                                                                                                     (lambda-exp
                                                                                                                       (p)
                                                                                                                       (begin-exp
                                                                                                                         ((app-exp
                                                                                                                            (letrec-exp
                                                                                                                              (f)
                                                                                                                              ((lambda-exp
                                                                                                                                 (x)
                                                                                                                                 (begin-exp
                                                                                                                                   ((if-exp
                                                                                                                                      (app-exp
                                                                                                                                        (var-exp
                                                                                                                                          eof-object?)
                                                                                                                                        ((var-exp
                                                                                                                                           x)))
                                                                                                                                      (begin-exp
                                                                                                                                        ((app-exp
                                                                                                                                           (var-exp
                                                                                                                                             close-port)
                                                                                                                                           ((var-exp
                                                                                                                                              p)))
                                                                                                                                          (lit-exp
                                                                                                                                            ())))
                                                                                                                                      (begin-exp
                                                                                                                                        ((app-exp
                                                                                                                                           (var-exp
                                                                                                                                             eval-one-exp)
                                                                                                                                           ((var-exp
                                                                                                                                              x)))
                                                                                                                                          (app-exp
                                                                                                                                            (var-exp
                                                                                                                                              f)
                                                                                                                                            ((app-exp
                                                                                                                                               (var-exp
                                                                                                                                                 read)
                                                                                                                                               ((var-exp
                                                                                                                                                  p))))))))))))
                                                                                                                              (var-exp
                                                                                                                                f))
                                                                                                                            ((app-exp
                                                                                                                               (var-exp
                                                                                                                                 read)
                                                                                                                               ((var-exp
                                                                                                                                  p))))))))
                                                                                                                     ((app-exp
                                                                                                                        (var-exp
                                                                                                                          open-input-file)
                                                                                                                        ((app-exp
                                                                                                                           (var-exp
                                                                                                                             car)
                                                                                                                           ((var-exp
                                                                                                                              arg)))))))
                                                                                                                   (if-exp
                                                                                                                     (app-exp
                                                                                                                       (var-exp
                                                                                                                         equal?)
                                                                                                                       ((var-exp
                                                                                                                          id)
                                                                                                                         (var-exp
                                                                                                                           id)))
                                                                                                                     (lit-exp
                                                                                                                       ())
                                                                                                                     ()))))))))))))))))))))))))))))))))))))))))))))))))))))))))
     ()))
 (list-of-numbers?
   (closure-record
     (ls)
     (if-exp
       (app-exp (var-exp null?) ((var-exp ls)))
       (lit-exp #t)
       (if-exp
         (app-exp
           (var-exp null?)
           ((app-exp (var-exp car) ((var-exp ls)))))
         (lit-exp #f)
         (if-exp
           (lit-exp #t)
           (if-exp
             (app-exp
               (var-exp list-of-numbers?)
               ((app-exp (var-exp cdr) ((var-exp ls)))))
             (app-exp
               (var-exp number?)
               ((app-exp (var-exp car) ((var-exp ls)))))
             (lit-exp #f))
           ())))
     ()))
 (apply-proc
   (closure-record
     (proc arg env)
     (if-exp
       (app-exp
         (var-exp equal?)
         ((var-exp closure-record)
           (app-exp (var-exp car) ((var-exp proc)))))
       (app-exp
         (var-exp eval-expression)
         ((app-exp (var-exp caddr) ((var-exp proc)))
           (app-exp
             (var-exp extend-env)
             ((app-exp (var-exp cadr) ((var-exp proc)))
               (var-exp arg)
               (app-exp
                 (var-exp car)
                 ((app-exp (var-exp cdddr) ((var-exp proc)))))))))
       (if-exp
         (app-exp
           (var-exp equal?)
           ((var-exp primitive)
             (app-exp (var-exp car) ((var-exp proc)))))
         (app-exp
           (var-exp apply-primitive-proc)
           ((app-exp (var-exp cadr) ((var-exp proc))) (var-exp arg)))
         (if-exp
           (app-exp
             (var-exp equal?)
             ((app-exp (var-exp car) ((var-exp proc)))
               (app-exp (var-exp car) ((var-exp proc)))))
           (lit-exp ())
           ())))
     ()))
 (make-closure
   (closure-record
     (id body env)
     (app-exp
       (var-exp list)
       ((lit-exp closure-record)
         (var-exp id)
         (var-exp body)
         (var-exp env)))
     ()))
 (null-list
   (closure-record
     (len accum)
     (if-exp
       (app-exp (var-exp =) ((var-exp len) (lit-exp 0)))
       (var-exp accum)
       (if-exp
         (lit-exp #t)
         (app-exp
           (var-exp null-list)
           ((app-exp (var-exp -) ((var-exp len) (lit-exp 1)))
             (app-exp
               (var-exp append)
               ((var-exp accum) (app-exp (var-exp list) ((lit-exp #f)))))))
         ()))
     ()))
 (eval-expression
   (closure-record
     (exp env)
     (if-exp
       (app-exp (var-exp null?) ((var-exp exp)))
       (lit-exp ())
       (if-exp
         (app-exp
           (var-exp equal?)
           ((var-exp var-exp) (app-exp (var-exp car) ((var-exp exp)))))
         (if-exp
           (app-exp
             (var-exp equal?)
             ((app-exp (var-exp cadr) ((var-exp exp))) (lit-exp rep)))
           (begin-exp
             ((set!-exp
                level
                (app-exp (var-exp +) ((var-exp level) (lit-exp 1))))
               (app-exp (var-exp rep) ())))
           (app-exp
             (var-exp apply-env)
             ((var-exp env) (app-exp (var-exp cadr) ((var-exp exp))))))
         (if-exp
           (app-exp
             (var-exp equal?)
             ((var-exp lit-exp) (app-exp (var-exp car) ((var-exp exp)))))
           (app-exp (var-exp cadr) ((var-exp exp)))
           (if-exp
             (app-exp
               (var-exp equal?)
               ((var-exp lambda-exp)
                 (app-exp (var-exp car) ((var-exp exp)))))
             (app-exp
               (var-exp make-closure)
               ((app-exp (var-exp cadr) ((var-exp exp)))
                 (app-exp (var-exp caddr) ((var-exp exp)))
                 (var-exp env)))
             (if-exp
               (app-exp
                 (var-exp equal?)
                 ((var-exp app-exp)
                   (app-exp (var-exp car) ((var-exp exp)))))
               (app-exp
                 (lambda-exp
                   (procedure)
                   (app-exp
                     (lambda-exp
                       (arg)
                       (begin-exp
                         ((app-exp
                            (var-exp apply-proc)
                            ((var-exp procedure)
                              (var-exp arg)
                              (var-exp env))))))
                     ((app-exp
                        (var-exp map)
                        ((lambda-exp
                           (operand)
                           (app-exp
                             (var-exp eval-expression)
                             ((var-exp operand) (var-exp env))))
                          (app-exp (var-exp caddr) ((var-exp exp))))))))
                 ((app-exp
                    (var-exp eval-expression)
                    ((app-exp (var-exp cadr) ((var-exp exp)))
                      (var-exp env)))))
               (if-exp
                 (app-exp
                   (var-exp equal?)
                   ((var-exp if-exp)
                     (app-exp (var-exp car) ((var-exp exp)))))
                 (if-exp
                   (app-exp
                     (var-exp eval-expression)
                     ((app-exp (var-exp cadr) ((var-exp exp)))
                       (var-exp env)))
                   (app-exp
                     (var-exp eval-expression)
                     ((app-exp (var-exp caddr) ((var-exp exp)))
                       (var-exp env)))
                   (if-exp
                     (app-exp
                       (var-exp not)
                       ((app-exp
                          (var-exp null?)
                          ((app-exp (var-exp cdddr) ((var-exp exp)))))))
                     (app-exp
                       (var-exp eval-expression)
                       ((app-exp
                          (var-exp car)
                          ((app-exp (var-exp cdddr) ((var-exp exp)))))
                         (var-exp env)))
                     (lit-exp ())))
                 (if-exp
                   (app-exp
                     (var-exp equal?)
                     ((var-exp set!-exp)
                       (app-exp (var-exp car) ((var-exp exp)))))
                   (app-exp
                     (var-exp change-env)
                     ((var-exp env)
                       (app-exp (var-exp cadr) ((var-exp exp)))
                       (app-exp
                         (var-exp eval-expression)
                         ((app-exp (var-exp caddr) ((var-exp exp)))
                           (var-exp env)))))
                   (if-exp
                     (app-exp
                       (var-exp equal?)
                       ((var-exp letrec-exp)
                         (app-exp (var-exp car) ((var-exp exp)))))
                     (if-exp
                       (lit-exp #t)
                       (app-exp
                         (lambda-exp
                           (vals)
                           (app-exp
                             (lambda-exp
                               (letrec-env)
                               (begin-exp
                                 ((app-exp
                                    (var-exp eval-expression)
                                    ((app-exp
                                       (var-exp car)
                                       ((app-exp
                                          (var-exp cdddr)
                                          ((var-exp exp)))))
                                      (var-exp letrec-env))))))
                             ((app-exp
                                (var-exp extend-env-recur)
                                ((app-exp (var-exp cadr) ((var-exp exp)))
                                  (var-exp vals)
                                  (var-exp env))))))
                         ((app-exp
                            (var-exp map)
                            ((lambda-exp
                               (v)
                               (app-exp
                                 (var-exp eval-expression)
                                 ((var-exp v) (var-exp env))))
                              (app-exp (var-exp caddr) ((var-exp exp)))))))
                       ())
                     (if-exp
                       (app-exp
                         (var-exp equal?)
                         ((var-exp begin-exp)
                           (app-exp (var-exp car) ((var-exp exp)))))
                       (letrec-exp
                         (eval-begin)
                         ((lambda-exp
                            (exprs)
                            (if-exp
                              (app-exp (var-exp null?) ((var-exp exprs)))
                              (lit-exp ())
                              (if-exp
                                (app-exp
                                  (var-exp null?)
                                  ((app-exp
                                     (var-exp cdr)
                                     ((var-exp exprs)))))
                                (app-exp
                                  (var-exp eval-expression)
                                  ((app-exp
                                     (var-exp car)
                                     ((var-exp exprs)))
                                    (var-exp env)))
                                (if-exp
                                  (lit-exp #t)
                                  (begin-exp
                                    ((app-exp
                                       (var-exp eval-expression)
                                       ((app-exp
                                          (var-exp car)
                                          ((var-exp exprs)))
                                         (var-exp env)))
                                      (app-exp
                                        (var-exp eval-begin)
                                        ((app-exp
                                           (var-exp cdr)
                                           ((var-exp exprs)))))))
                                  ())))))
                         (begin-exp
                           ((app-exp
                              (var-exp eval-begin)
                              ((app-exp
                                 (var-exp cadr)
                                 ((var-exp exp))))))))
                       (if-exp
                         (app-exp
                           (var-exp equal?)
                           ((var-exp while-exp)
                             (app-exp (var-exp car) ((var-exp exp)))))
                         (letrec-exp
                           (loop)
                           ((lambda-exp
                              ()
                              (if-exp
                                (app-exp
                                  (var-exp eval-expression)
                                  ((app-exp (var-exp cadr) ((var-exp exp)))
                                    (var-exp env)))
                                (begin-exp
                                  ((app-exp
                                     (var-exp eval-expression)
                                     ((app-exp
                                        (var-exp caddr)
                                        ((var-exp exp)))
                                       (var-exp env)))
                                    (app-exp (var-exp loop) ())))
                                ())))
                           (begin-exp ((app-exp (var-exp loop) ()))))
                         (if-exp
                           (app-exp
                             (var-exp equal?)
                             ((var-exp define-exp)
                               (app-exp (var-exp car) ((var-exp exp)))))
                           (if-exp
                             (app-exp (var-exp null?) ((var-exp env)))
                             (app-exp
                               (var-exp extend-global-env)
                               ((app-exp (var-exp cadr) ((var-exp exp)))
                                 (app-exp
                                   (var-exp eval-expression)
                                   ((app-exp
                                      (var-exp caddr)
                                      ((var-exp exp)))
                                     (app-exp (var-exp empty-env) ())))))
                             (app-exp
                               (var-exp add-to-env)
                               ((app-exp (var-exp cadr) ((var-exp exp)))
                                 (app-exp
                                   (var-exp eval-expression)
                                   ((app-exp
                                      (var-exp caddr)
                                      ((var-exp exp)))
                                     (var-exp env)))
                                 (var-exp env))))
                           (if-exp
                             (app-exp
                               (var-exp equal?)
                               ((app-exp (var-exp car) ((var-exp exp)))
                                 (app-exp (var-exp car) ((var-exp exp)))))
                             (lit-exp ())
                             ()))))))))))))
     ()))
 (expand-syntax
   (closure-record
     (exp)
     (if-exp
       (app-exp (var-exp null?) ((var-exp exp)))
       (lit-exp ())
       (if-exp
         (app-exp
           (var-exp equal?)
           ((app-exp (var-exp lambda-exp) ())
             (app-exp (var-exp car) ((var-exp exp)))))
         (app-exp
           (var-exp list)
           ((lit-exp lambda-exp)
             (app-exp (var-exp cadr) ((var-exp exp)))
             (app-exp
               (var-exp expand-syntax)
               ((app-exp (var-exp caddr) ((var-exp exp)))))))
         (if-exp
           (app-exp
             (var-exp equal?)
             ((var-exp app-exp) (app-exp (var-exp car) ((var-exp exp)))))
           (app-exp
             (var-exp list)
             ((lit-exp app-exp)
               (app-exp
                 (var-exp expand-syntax)
                 ((app-exp (var-exp cadr) ((var-exp exp)))))
               (app-exp
                 (var-exp map)
                 ((var-exp expand-syntax)
                   (app-exp (var-exp caddr) ((var-exp exp)))))))
           (if-exp
             (app-exp
               (var-exp equal?)
               ((var-exp if-exp) (app-exp (var-exp car) ((var-exp exp)))))
             (app-exp
               (var-exp list)
               ((lit-exp if-exp)
                 (app-exp
                   (var-exp expand-syntax)
                   ((app-exp (var-exp cadr) ((var-exp exp)))))
                 (app-exp
                   (var-exp expand-syntax)
                   ((app-exp (var-exp caddr) ((var-exp exp)))))
                 (app-exp
                   (var-exp expand-syntax)
                   ((app-exp
                      (var-exp car)
                      ((app-exp (var-exp cdddr) ((var-exp exp)))))))))
             (if-exp
               (app-exp
                 (var-exp equal?)
                 ((var-exp set!-exp)
                   (app-exp (var-exp car) ((var-exp exp)))))
               (app-exp
                 (var-exp list)
                 ((lit-exp set!-exp)
                   (app-exp (var-exp cadr) ((var-exp exp)))
                   (app-exp
                     (var-exp expand-syntax)
                     ((app-exp (var-exp caddr) ((var-exp exp)))))))
               (if-exp
                 (app-exp
                   (var-exp equal?)
                   ((var-exp letrec-exp)
                     (app-exp (var-exp car) ((var-exp exp)))))
                 (app-exp
                   (var-exp list)
                   ((lit-exp letrec-exp)
                     (app-exp (var-exp cadr) ((var-exp exp)))
                     (app-exp
                       (var-exp map)
                       ((var-exp expand-syntax)
                         (app-exp (var-exp caddr) ((var-exp exp)))))
                     (app-exp
                       (var-exp expand-syntax)
                       ((app-exp
                          (var-exp car)
                          ((app-exp (var-exp cdddr) ((var-exp exp)))))))))
                 (if-exp
                   (app-exp
                     (var-exp equal?)
                     ((var-exp let-exp)
                       (app-exp (var-exp car) ((var-exp exp)))))
                   (app-exp
                     (var-exp list)
                     ((lit-exp app-exp)
                       (app-exp
                         (var-exp list)
                         ((lit-exp lambda-exp)
                           (app-exp (var-exp cadr) ((var-exp exp)))
                           (app-exp
                             (var-exp expand-syntax)
                             ((app-exp
                                (var-exp car)
                                ((app-exp
                                   (var-exp cdddr)
                                   ((var-exp exp)))))))))
                       (app-exp
                         (var-exp map)
                         ((var-exp expand-syntax)
                           (app-exp (var-exp caddr) ((var-exp exp)))))))
                   (if-exp
                     (app-exp
                       (var-exp equal?)
                       ((var-exp named-let-exp)
                         (app-exp (var-exp car) ((var-exp exp)))))
                     (app-exp
                       (var-exp expand-syntax)
                       ((app-exp
                          (var-exp list)
                          ((lit-exp app-exp)
                            (app-exp
                              (var-exp list)
                              ((lit-exp letrec-exp)
                                (app-exp
                                  (var-exp list)
                                  ((app-exp
                                     (var-exp cadr)
                                     ((var-exp exp)))))
                                (app-exp
                                  (var-exp list)
                                  ((app-exp
                                     (var-exp list)
                                     ((lit-exp lambda-exp)
                                       (app-exp
                                         (var-exp caddr)
                                         ((var-exp exp)))
                                       (app-exp
                                         (var-exp cadr)
                                         ((app-exp
                                            (var-exp cdddr)
                                            ((var-exp exp)))))))))
                                (app-exp
                                  (var-exp list)
                                  ((lit-exp var-exp)
                                    (app-exp
                                      (var-exp cadr)
                                      ((var-exp exp)))))))
                            (app-exp
                              (var-exp car)
                              ((app-exp
                                 (var-exp cdddr)
                                 ((var-exp exp)))))))))
                     (if-exp
                       (app-exp
                         (var-exp equal?)
                         ((var-exp let*-exp)
                           (app-exp (var-exp car) ((var-exp exp)))))
                       (if-exp
                         (if-exp
                           (app-exp
                             (var-exp null?)
                             ((app-exp (var-exp cadr) ((var-exp exp)))))
                           (app-exp
                             (var-exp null?)
                             ((app-exp (var-exp caddr) ((var-exp exp)))))
                           (lit-exp #f))
                         (app-exp
                           (var-exp expand-syntax)
                           ((app-exp
                              (var-exp car)
                              ((app-exp
                                 (var-exp cdddr)
                                 ((var-exp exp)))))))
                         (if-exp
                           (lit-exp #t)
                           (app-exp
                             (var-exp list)
                             ((lit-exp app-exp)
                               (app-exp
                                 (var-exp list)
                                 ((lit-exp lambda-exp)
                                   (app-exp
                                     (var-exp list)
                                     ((app-exp
                                        (var-exp car)
                                        ((app-exp
                                           (var-exp cadr)
                                           ((var-exp exp)))))))
                                   (app-exp
                                     (var-exp expand-syntax)
                                     ((app-exp
                                        (var-exp list)
                                        ((lit-exp let*-exp)
                                          (app-exp
                                            (var-exp cdr)
                                            ((app-exp
                                               (var-exp cadr)
                                               ((var-exp exp)))))
                                          (app-exp
                                            (var-exp cdr)
                                            ((app-exp
                                               (var-exp caddr)
                                               ((var-exp exp)))))
                                          (app-exp
                                            (var-exp car)
                                            ((app-exp
                                               (var-exp cdddr)
                                               ((var-exp exp)))))))))))
                               (app-exp
                                 (var-exp list)
                                 ((app-exp
                                    (var-exp expand-syntax)
                                    ((app-exp
                                       (var-exp car)
                                       ((app-exp
                                          (var-exp caddr)
                                          ((var-exp exp)))))))))))
                           ()))
                       (if-exp
                         (app-exp
                           (var-exp equal?)
                           ((var-exp begin-exp)
                             (app-exp (var-exp car) ((var-exp exp)))))
                         (app-exp
                           (var-exp list)
                           ((lit-exp begin-exp)
                             (app-exp
                               (var-exp map)
                               ((var-exp expand-syntax)
                                 (app-exp
                                   (var-exp cadr)
                                   ((var-exp exp)))))))
                         (if-exp
                           (app-exp
                             (var-exp equal?)
                             ((var-exp define-exp)
                               (app-exp (var-exp car) ((var-exp exp)))))
                           (app-exp
                             (var-exp list)
                             ((lit-exp define-exp)
                               (app-exp (var-exp cadr) ((var-exp exp)))
                               (app-exp
                                 (var-exp expand-syntax)
                                 ((app-exp
                                    (var-exp caddr)
                                    ((var-exp exp)))))))
                           (if-exp
                             (app-exp
                               (var-exp equal?)
                               ((var-exp and-exp)
                                 (app-exp (var-exp car) ((var-exp exp)))))
                             (if-exp
                               (app-exp
                                 (var-exp null?)
                                 ((app-exp
                                    (var-exp cadr)
                                    ((var-exp exp)))))
                               (app-exp
                                 (var-exp list)
                                 ((lit-exp lit-exp) (lit-exp #t)))
                               (if-exp
                                 (app-exp
                                   (var-exp null?)
                                   ((app-exp
                                      (var-exp cdr)
                                      ((app-exp
                                         (var-exp cadr)
                                         ((var-exp exp)))))))
                                 (app-exp
                                   (var-exp expand-syntax)
                                   ((app-exp
                                      (var-exp car)
                                      ((app-exp
                                         (var-exp cadr)
                                         ((var-exp exp)))))))
                                 (app-exp
                                   (var-exp expand-syntax)
                                   ((app-exp
                                      (var-exp list)
                                      ((lit-exp if-exp)
                                        (app-exp
                                          (var-exp car)
                                          ((app-exp
                                             (var-exp cadr)
                                             ((var-exp exp)))))
                                        (app-exp
                                          (var-exp list)
                                          ((lit-exp and-exp)
                                            (app-exp
                                              (var-exp cdr)
                                              ((app-exp
                                                 (var-exp cadr)
                                                 ((var-exp exp)))))))
                                        (app-exp
                                          (var-exp list)
                                          ((lit-exp lit-exp)
                                            (lit-exp #f)))))))))
                             (if-exp
                               (app-exp
                                 (var-exp equal?)
                                 ((var-exp or-exp)
                                   (app-exp
                                     (var-exp car)
                                     ((var-exp exp)))))
                               (if-exp
                                 (app-exp
                                   (var-exp null?)
                                   ((app-exp
                                      (var-exp cadr)
                                      ((var-exp exp)))))
                                 (app-exp
                                   (var-exp list)
                                   ((lit-exp lit-exp) (lit-exp #f)))
                                 (if-exp
                                   (app-exp
                                     (var-exp null?)
                                     ((app-exp
                                        (var-exp cdr)
                                        ((app-exp
                                           (var-exp cadr)
                                           ((var-exp exp)))))))
                                   (app-exp
                                     (var-exp expand-syntax)
                                     ((app-exp
                                        (var-exp car)
                                        ((app-exp
                                           (var-exp cadr)
                                           ((var-exp exp)))))))
                                   (app-exp
                                     (var-exp expand-syntax)
                                     ((app-exp
                                        (var-exp list)
                                        ((lit-exp let-exp)
                                          (app-exp
                                            (var-exp cons)
                                            ((lit-exp sys-var)
                                              (app-exp
                                                (var-exp list)
                                                ((lit-exp tempVal)))))
                                          (app-exp
                                            (var-exp list)
                                            ((app-exp
                                               (var-exp car)
                                               ((app-exp
                                                  (var-exp cadr)
                                                  ((var-exp exp)))))))
                                          (app-exp
                                            (var-exp list)
                                            ((lit-exp if-exp)
                                              (app-exp
                                                (var-exp list)
                                                ((lit-exp var-exp)
                                                  (app-exp
                                                    (var-exp cons)
                                                    ((lit-exp sys-var)
                                                      (app-exp
                                                        (var-exp list)
                                                        ((lit-exp
                                                           tempVal)))))))
                                              (app-exp
                                                (var-exp list)
                                                ((lit-exp var-exp)
                                                  (app-exp
                                                    (var-exp cons)
                                                    ((lit-exp sys-var)
                                                      (app-exp
                                                        (var-exp list)
                                                        ((lit-exp
                                                           tempVal)))))))
                                              (app-exp
                                                (var-exp list)
                                                ((lit-exp or-exp)
                                                  (app-exp
                                                    (var-exp cdr)
                                                    ((app-exp
                                                       (var-exp cadr)
                                                       ((var-exp
                                                          exp)))))))))))))))
                               (if-exp
                                 (app-exp
                                   (var-exp equal?)
                                   ((var-exp cond-exp)
                                     (app-exp
                                       (var-exp car)
                                       ((var-exp exp)))))
                                 (if-exp
                                   (app-exp
                                     (var-exp null?)
                                     ((app-exp
                                        (var-exp cadr)
                                        ((var-exp exp)))))
                                   (lit-exp ())
                                   (if-exp
                                     (lit-exp #t)
                                     (app-exp
                                       (var-exp expand-syntax)
                                       ((app-exp
                                          (var-exp list)
                                          ((lit-exp if-exp)
                                            (app-exp
                                              (var-exp caar)
                                              ((app-exp
                                                 (var-exp cadr)
                                                 ((var-exp exp)))))
                                            (app-exp
                                              (var-exp cadar)
                                              ((app-exp
                                                 (var-exp cadr)
                                                 ((var-exp exp)))))
                                            (app-exp
                                              (var-exp list)
                                              ((lit-exp cond-exp)
                                                (app-exp
                                                  (var-exp cdr)
                                                  ((app-exp
                                                     (var-exp cadr)
                                                     ((var-exp
                                                        exp)))))))))))
                                     ()))
                                 (if-exp
                                   (app-exp
                                     (var-exp equal?)
                                     ((var-exp case-exp)
                                       (app-exp
                                         (var-exp car)
                                         ((var-exp exp)))))
                                   (app-exp
                                     (lambda-exp
                                       (case-key)
                                       (begin-exp
                                         ((if-exp
                                            (app-exp
                                              (var-exp null?)
                                              ((app-exp
                                                 (var-exp caddr)
                                                 ((var-exp exp)))))
                                            (lit-exp ())
                                            (if-exp
                                              (lit-exp #t)
                                              (app-exp
                                                (var-exp expand-syntax)
                                                ((app-exp
                                                   (var-exp list)
                                                   ((lit-exp if-exp)
                                                     (app-exp
                                                       (var-exp list)
                                                       ((lit-exp or-exp)
                                                         (app-exp
                                                           (var-exp map)
                                                           ((lambda-exp
                                                              (ls)
                                                              (app-exp
                                                                (var-exp
                                                                  list)
                                                                ((lit-exp
                                                                   app-exp)
                                                                  (app-exp
                                                                    (var-exp
                                                                      list)
                                                                    ((lit-exp
                                                                       var-exp)
                                                                      (lit-exp
                                                                        equal?)))
                                                                  (app-exp
                                                                    (var-exp
                                                                      list)
                                                                    ((var-exp
                                                                       ls)
                                                                      (var-exp
                                                                        case-key))))))
                                                             (app-exp
                                                               (var-exp
                                                                 caar)
                                                               ((app-exp
                                                                  (var-exp
                                                                    caddr)
                                                                  ((var-exp
                                                                     exp)))))))))
                                                     (app-exp
                                                       (var-exp cadar)
                                                       ((app-exp
                                                          (var-exp caddr)
                                                          ((var-exp
                                                             exp)))))
                                                     (app-exp
                                                       (var-exp list)
                                                       ((lit-exp case-exp)
                                                         (app-exp
                                                           (var-exp cadr)
                                                           ((var-exp exp)))
                                                         (app-exp
                                                           (var-exp cdr)
                                                           ((app-exp
                                                              (var-exp
                                                                caddr)
                                                              ((var-exp
                                                                 exp)))))))))))
                                              ())))))
                                     ((app-exp
                                        (var-exp expand-syntax)
                                        ((app-exp
                                           (var-exp cadr)
                                           ((var-exp exp)))))))
                                   (if-exp
                                     (app-exp
                                       (var-exp equal?)
                                       ((app-exp
                                          (var-exp car)
                                          ((var-exp exp)))
                                         (app-exp
                                           (var-exp car)
                                           ((var-exp exp)))))
                                     (var-exp exp)
                                     ()))))))))))))))))
     ()))
 (top-level-eval
   (closure-record
     (form)
     (if-exp
       (app-exp
         (var-exp equal?)
         ((var-exp define-exp)
           (app-exp (var-exp car) ((var-exp form)))))
       (app-exp
         (var-exp extend-global-env)
         ((app-exp (var-exp cadr) ((var-exp form)))
           (app-exp
             (var-exp eval-expression)
             ((app-exp (var-exp caddr) ((var-exp form)))
               (app-exp (var-exp empty-env) ())))))
       (if-exp
         (app-exp
           (var-exp equal?)
           ((app-exp (var-exp car) ((var-exp form)))
             (app-exp (var-exp car) ((var-exp form)))))
         (app-exp
           (var-exp eval-expression)
           ((var-exp form) (app-exp (var-exp empty-env) ())))
         ()))
     ()))
 (eval-one-exp
   (closure-record
     (exp)
     (app-exp
       (lambda-exp
         (parse-tree)
         (app-exp
           (lambda-exp
             (expanded-tree)
             (app-exp
               (lambda-exp (result) (begin-exp ((var-exp result))))
               ((app-exp
                  (var-exp top-level-eval)
                  ((var-exp expanded-tree))))))
           ((app-exp (var-exp expand-syntax) ((var-exp parse-tree))))))
       ((app-exp (var-exp parse-expression) ((var-exp exp)))))
     ()))
 (unparse-ids
   (closure-record
     (id)
     (if-exp
       (app-exp (var-exp null?) ((var-exp id)))
       (lit-exp ())
       (if-exp
         (app-exp
           (var-exp eq?)
           ((app-exp (var-exp car) ((var-exp id))) (lit-exp improper)))
         (app-exp
           (var-exp car)
           ((app-exp
              (var-exp append)
              ((app-exp
                 (var-exp list)
                 ((app-exp
                    (var-exp cons)
                    ((app-exp (var-exp caadr) ((var-exp id)))
                      (app-exp (var-exp cadadr) ((var-exp id)))))))
                (app-exp
                  (var-exp unparse-ids)
                  ((app-exp (var-exp cddr) ((var-exp id)))))))))
         (if-exp
           (app-exp
             (var-exp eq?)
             ((app-exp (var-exp car) ((var-exp id))) (lit-exp variable)))
           (app-exp (var-exp cadr) ((var-exp id)))
           (if-exp
             (lit-exp #t)
             (app-exp
               (var-exp append)
               ((if-exp
                  (app-exp
                    (var-exp atom?)
                    ((app-exp (var-exp car) ((var-exp id)))))
                  (app-exp
                    (var-exp list)
                    ((app-exp (var-exp car) ((var-exp id)))))
                  (app-exp (var-exp car) ((var-exp id))))
                 (app-exp
                   (var-exp unparse-ids)
                   ((app-exp (var-exp cdr) ((var-exp id)))))))
             ()))))
     ()))
 (unparse-arguments
   (closure-record
     (symbols values)
     (if-exp
       (app-exp (var-exp null?) ((var-exp symbols)))
       (lit-exp ())
       (if-exp
         (lit-exp #t)
         (app-exp
           (var-exp cons)
           ((app-exp
              (var-exp list)
              ((app-exp (var-exp car) ((var-exp symbols)))
                (app-exp
                  (var-exp unparse-expression)
                  ((app-exp (var-exp car) ((var-exp values)))))))
             (app-exp
               (var-exp unparse-arguments)
               ((app-exp (var-exp cdr) ((var-exp symbols)))
                 (app-exp (var-exp cdr) ((var-exp values)))))))
         ()))
     ()))
 (get-list
   (closure-record
     (ls accum)
     (if-exp
       (app-exp
         (var-exp null?)
         ((app-exp (var-exp cdr) ((var-exp ls)))))
       (var-exp accum)
       (if-exp
         (lit-exp #t)
         (app-exp
           (var-exp get-list)
           ((app-exp (var-exp cdr) ((var-exp ls)))
             (app-exp
               (var-exp append)
               ((var-exp accum)
                 (app-exp
                   (var-exp list)
                   ((app-exp (var-exp car) ((var-exp ls)))))))))
         ()))
     ()))
 (get-vallist
   (closure-record
     (ls accum)
     (app-exp
       (lambda-exp
         (len val)
         (begin-exp
           ((letrec-exp
              (loop)
              ((lambda-exp
                 (accum)
                 (if-exp
                   (app-exp (var-exp zero?) ((var-exp len)))
                   (var-exp accum)
                   (begin-exp
                     ((set!-exp
                        len
                        (app-exp (var-exp -) ((var-exp len) (lit-exp 1))))
                       (app-exp
                         (var-exp loop)
                         ((app-exp
                            (var-exp append)
                            ((app-exp (var-exp list) ((var-exp val)))
                              (var-exp accum))))))))))
              (begin-exp ((app-exp (var-exp loop) ((lit-exp ())))))))))
       ((app-exp
          (var-exp -)
          ((app-exp (var-exp length) ((var-exp ls))) (lit-exp 1)))
         (app-exp
           (var-exp list-ref)
           ((var-exp ls)
             (app-exp
               (var-exp -)
               ((app-exp (var-exp length) ((var-exp ls))) (lit-exp 1)))))))
     ()))
 (let-vallist
   (closure-record
     (ls accum)
     (if-exp
       (app-exp (var-exp null?) ((var-exp ls)))
       (var-exp accum)
       (if-exp
         (app-exp
           (var-exp null?)
           ((app-exp (var-exp car) ((var-exp ls)))))
         (var-exp accum)
         (if-exp
           (lit-exp #t)
           (app-exp
             (var-exp let-vallist)
             ((app-exp (var-exp cdr) ((var-exp ls)))
               (app-exp
                 (var-exp append)
                 ((var-exp accum)
                   (app-exp
                     (var-exp get-vallist)
                     ((app-exp (var-exp car) ((var-exp ls)))
                       (lit-exp ())))))))
           ())))
     ()))
 (let-idlist
   (closure-record
     (ls accum)
     (if-exp
       (app-exp (var-exp null?) ((var-exp ls)))
       (var-exp accum)
       (if-exp
         (app-exp
           (var-exp null?)
           ((app-exp (var-exp car) ((var-exp ls)))))
         (var-exp accum)
         (if-exp
           (lit-exp #t)
           (app-exp
             (var-exp let-idlist)
             ((app-exp (var-exp cdr) ((var-exp ls)))
               (app-exp
                 (var-exp append)
                 ((var-exp accum)
                   (app-exp
                     (var-exp get-list)
                     ((app-exp (var-exp car) ((var-exp ls)))
                       (lit-exp ())))))))
           ())))
     ()))
 (cd-lambda
   (closure-record
     (ls)
     (app-exp
       (var-exp list)
       ((if-exp
          (app-exp
            (var-exp equal?)
            ((lit-exp else) (app-exp (var-exp car) ((var-exp ls)))))
          (app-exp (var-exp list) ((lit-exp lit-exp) (lit-exp #t)))
          (app-exp
            (var-exp parse-expression)
            ((app-exp (var-exp car) ((var-exp ls))))))
         (app-exp
           (var-exp parse-expression)
           ((app-exp (var-exp cadr) ((var-exp ls)))))))
     ()))
 (valid-clause?
   (closure-record
     (ls)
     (if-exp
       (app-exp (var-exp null?) ((var-exp ls)))
       (lit-exp #t)
       (if-exp
         (app-exp
           (var-exp not)
           ((app-exp
              (var-exp eq?)
              ((app-exp
                 (var-exp length)
                 ((app-exp (var-exp car) ((var-exp ls)))))
                (lit-exp 2)))))
         (lit-exp #f)
         (if-exp
           (if-exp
             (app-exp
               (var-exp equal?)
               ((lit-exp else) (app-exp (var-exp caar) ((var-exp ls)))))
             (app-exp
               (var-exp not)
               ((app-exp
                  (var-exp null?)
                  ((app-exp (var-exp cdr) ((var-exp ls)))))))
             (lit-exp #f))
           (lit-exp #f)
           (if-exp
             (lit-exp #t)
             (app-exp
               (var-exp valid-clause?)
               ((app-exp (var-exp cdr) ((var-exp ls)))))
             ()))))
     ()))
 (parse-expression
   (closure-record
     (datum)
     (if-exp
       (app-exp (var-exp null?) ((var-exp datum)))
       (lit-exp ())
       (if-exp
         (app-exp (var-exp symbol?) ((var-exp datum)))
         (app-exp (var-exp list) ((lit-exp var-exp) (var-exp datum)))
         (if-exp
           (app-exp (var-exp number?) ((var-exp datum)))
           (app-exp (var-exp list) ((lit-exp lit-exp) (var-exp datum)))
           (if-exp
             (app-exp (var-exp string?) ((var-exp datum)))
             (app-exp (var-exp list) ((lit-exp lit-exp) (var-exp datum)))
             (if-exp
               (app-exp (var-exp boolean?) ((var-exp datum)))
               (app-exp (var-exp list) ((lit-exp lit-exp) (var-exp datum)))
               (if-exp
                 (app-exp (var-exp vector?) ((var-exp datum)))
                 (app-exp
                   (var-exp list)
                   ((lit-exp lit-exp) (var-exp datum)))
                 (if-exp
                   (app-exp (var-exp pair?) ((var-exp datum)))
                   (if-exp
                     (app-exp
                       (var-exp equal?)
                       ((lit-exp quote)
                         (app-exp (var-exp car) ((var-exp datum)))))
                     (if-exp
                       (app-exp
                         (var-exp atom?)
                         ((app-exp (var-exp cadr) ((var-exp datum)))))
                       (app-exp
                         (var-exp list)
                         ((lit-exp lit-exp)
                           (app-exp (var-exp cadr) ((var-exp datum)))))
                       (app-exp
                         (var-exp parse-expression)
                         ((app-exp (var-exp cadr) ((var-exp datum))))))
                     (if-exp
                       (app-exp
                         (var-exp equal?)
                         ((lit-exp lambda)
                           (app-exp (var-exp car) ((var-exp datum)))))
                       (app-exp
                         (var-exp list)
                         ((lit-exp lambda-exp)
                           (app-exp
                             (var-exp param-list)
                             ((app-exp (var-exp cadr) ((var-exp datum)))))
                           (if-exp
                             (app-exp
                               (var-exp =)
                               ((app-exp
                                  (var-exp length)
                                  ((app-exp
                                     (var-exp cddr)
                                     ((var-exp datum)))))
                                 (lit-exp 1)))
                             (app-exp
                               (var-exp parse-expression)
                               ((app-exp
                                  (var-exp caddr)
                                  ((var-exp datum)))))
                             (app-exp
                               (var-exp list)
                               ((lit-exp begin-exp)
                                 (app-exp
                                   (var-exp map)
                                   ((var-exp parse-expression)
                                     (app-exp
                                       (var-exp cddr)
                                       ((var-exp datum))))))))))
                       (if-exp
                         (app-exp
                           (var-exp equal?)
                           ((lit-exp set!)
                             (app-exp (var-exp car) ((var-exp datum)))))
                         (app-exp
                           (var-exp list)
                           ((lit-exp set!-exp)
                             (app-exp (var-exp cadr) ((var-exp datum)))
                             (app-exp
                               (var-exp parse-expression)
                               ((app-exp
                                  (var-exp caddr)
                                  ((var-exp datum)))))))
                         (if-exp
                           (app-exp
                             (var-exp equal?)
                             ((lit-exp letrec)
                               (app-exp (var-exp car) ((var-exp datum)))))
                           (if-exp
                             (app-exp
                               (var-exp valid?)
                               ((app-exp
                                  (var-exp cadr)
                                  ((var-exp datum)))))
                             (app-exp
                               (var-exp list)
                               ((lit-exp letrec-exp)
                                 (app-exp
                                   (var-exp map)
                                   ((var-exp car)
                                     (app-exp
                                       (var-exp cadr)
                                       ((var-exp datum)))))
                                 (app-exp
                                   (var-exp map)
                                   ((var-exp parse-expression)
                                     (app-exp
                                       (var-exp map)
                                       ((var-exp cadr)
                                         (app-exp
                                           (var-exp cadr)
                                           ((var-exp datum)))))))
                                 (app-exp
                                   (var-exp list)
                                   ((lit-exp begin-exp)
                                     (app-exp
                                       (var-exp map)
                                       ((var-exp parse-expression)
                                         (app-exp
                                           (var-exp cddr)
                                           ((var-exp datum)))))))))
                             (lit-exp ()))
                           (if-exp
                             (app-exp
                               (var-exp equal?)
                               ((lit-exp let*)
                                 (app-exp
                                   (var-exp car)
                                   ((var-exp datum)))))
                             (if-exp
                               (app-exp
                                 (var-exp valid?)
                                 ((app-exp
                                    (var-exp cadr)
                                    ((var-exp datum)))))
                               (app-exp
                                 (var-exp list)
                                 ((lit-exp let*-exp)
                                   (app-exp
                                     (var-exp map)
                                     ((var-exp car)
                                       (app-exp
                                         (var-exp cadr)
                                         ((var-exp datum)))))
                                   (app-exp
                                     (var-exp map)
                                     ((var-exp parse-expression)
                                       (app-exp
                                         (var-exp map)
                                         ((var-exp cadr)
                                           (app-exp
                                             (var-exp cadr)
                                             ((var-exp datum)))))))
                                   (app-exp
                                     (var-exp list)
                                     ((lit-exp begin-exp)
                                       (app-exp
                                         (var-exp map)
                                         ((var-exp parse-expression)
                                           (app-exp
                                             (var-exp cddr)
                                             ((var-exp datum)))))))))
                               (lit-exp ()))
                             (if-exp
                               (app-exp
                                 (var-exp equal?)
                                 ((lit-exp let)
                                   (app-exp
                                     (var-exp car)
                                     ((var-exp datum)))))
                               (if-exp
                                 (app-exp
                                   (var-exp list?)
                                   ((app-exp
                                      (var-exp cadr)
                                      ((var-exp datum)))))
                                 (if-exp
                                   (app-exp
                                     (lambda-exp
                                       (sys-var tempVal)
                                       (if-exp
                                         (var-exp (sys-var tempVal))
                                         (var-exp (sys-var tempVal))
                                         (lit-exp #t)))
                                     ((app-exp
                                        (var-exp valid?)
                                        ((app-exp
                                           (var-exp cadr)
                                           ((var-exp datum)))))))
                                   (app-exp
                                     (var-exp list)
                                     ((lit-exp let-exp)
                                       (app-exp
                                         (var-exp let-idlist)
                                         ((app-exp
                                            (var-exp cadr)
                                            ((var-exp datum)))
                                           (lit-exp ())))
                                       (app-exp
                                         (var-exp map)
                                         ((var-exp parse-expression)
                                           (app-exp
                                             (var-exp let-vallist)
                                             ((app-exp
                                                (var-exp cadr)
                                                ((var-exp datum)))
                                               (lit-exp ())))))
                                       (app-exp
                                         (var-exp list)
                                         ((lit-exp begin-exp)
                                           (app-exp
                                             (var-exp map)
                                             ((var-exp parse-expression)
                                               (app-exp
                                                 (var-exp cddr)
                                                 ((var-exp datum)))))))))
                                   (lit-exp ()))
                                 (app-exp
                                   (var-exp list)
                                   ((lit-exp named-let-exp)
                                     (app-exp
                                       (var-exp cadr)
                                       ((var-exp datum)))
                                     (app-exp
                                       (var-exp map)
                                       ((var-exp car)
                                         (app-exp
                                           (var-exp caddr)
                                           ((var-exp datum)))))
                                     (app-exp
                                       (var-exp map)
                                       ((var-exp parse-expression)
                                         (app-exp
                                           (var-exp map)
                                           ((var-exp cadr)
                                             (app-exp
                                               (var-exp caddr)
                                               ((var-exp datum)))))))
                                     (app-exp
                                       (var-exp list)
                                       ((lit-exp begin-exp)
                                         (app-exp
                                           (var-exp map)
                                           ((var-exp parse-expression)
                                             (app-exp
                                               (var-exp cdddr)
                                               ((var-exp datum))))))))))
                               (if-exp
                                 (app-exp
                                   (var-exp equal?)
                                   ((lit-exp if)
                                     (app-exp
                                       (var-exp car)
                                       ((var-exp datum)))))
                                 (app-exp
                                   (var-exp list)
                                   ((lit-exp if-exp)
                                     (app-exp
                                       (var-exp parse-expression)
                                       ((app-exp
                                          (var-exp cadr)
                                          ((var-exp datum)))))
                                     (app-exp
                                       (var-exp parse-expression)
                                       ((app-exp
                                          (var-exp caddr)
                                          ((var-exp datum)))))
                                     (if-exp
                                       (app-exp
                                         (var-exp null?)
                                         ((app-exp
                                            (var-exp cdddr)
                                            ((var-exp datum)))))
                                       (lit-exp ())
                                       (app-exp
                                         (var-exp parse-expression)
                                         ((app-exp
                                            (var-exp cadddr)
                                            ((var-exp datum))))))))
                                 (if-exp
                                   (app-exp
                                     (var-exp equal?)
                                     ((lit-exp begin)
                                       (app-exp
                                         (var-exp car)
                                         ((var-exp datum)))))
                                   (app-exp
                                     (var-exp list)
                                     ((lit-exp begin-exp)
                                       (app-exp
                                         (var-exp map)
                                         ((var-exp parse-expression)
                                           (app-exp
                                             (var-exp cdr)
                                             ((var-exp datum)))))))
                                   (if-exp
                                     (app-exp
                                       (var-exp equal?)
                                       ((lit-exp while)
                                         (app-exp
                                           (var-exp car)
                                           ((var-exp datum)))))
                                     (app-exp
                                       (var-exp list)
                                       ((lit-exp while-exp)
                                         (app-exp
                                           (var-exp parse-expression)
                                           ((app-exp
                                              (var-exp cadr)
                                              ((var-exp datum)))))
                                         (app-exp
                                           (var-exp list)
                                           ((lit-exp begin-exp)
                                             (app-exp
                                               (var-exp map)
                                               ((var-exp parse-expression)
                                                 (app-exp
                                                   (var-exp cddr)
                                                   ((var-exp datum)))))))))
                                     (if-exp
                                       (app-exp
                                         (var-exp equal?)
                                         ((lit-exp and)
                                           (app-exp
                                             (var-exp car)
                                             ((var-exp datum)))))
                                       (app-exp
                                         (var-exp list)
                                         ((lit-exp and-exp)
                                           (app-exp
                                             (var-exp map)
                                             ((var-exp parse-expression)
                                               (app-exp
                                                 (var-exp cdr)
                                                 ((var-exp datum)))))))
                                       (if-exp
                                         (app-exp
                                           (var-exp equal?)
                                           ((lit-exp or)
                                             (app-exp
                                               (var-exp car)
                                               ((var-exp datum)))))
                                         (app-exp
                                           (var-exp list)
                                           ((lit-exp or-exp)
                                             (app-exp
                                               (var-exp map)
                                               ((var-exp parse-expression)
                                                 (app-exp
                                                   (var-exp cdr)
                                                   ((var-exp datum)))))))
                                         (if-exp
                                           (app-exp
                                             (var-exp equal?)
                                             ((lit-exp cond)
                                               (app-exp
                                                 (var-exp car)
                                                 ((var-exp datum)))))
                                           (app-exp
                                             (var-exp list)
                                             ((lit-exp cond-exp)
                                               (app-exp
                                                 (var-exp map)
                                                 ((var-exp cd-lambda)
                                                   (app-exp
                                                     (var-exp cdr)
                                                     ((var-exp datum)))))))
                                           (if-exp
                                             (app-exp
                                               (var-exp equal?)
                                               ((lit-exp case)
                                                 (app-exp
                                                   (var-exp car)
                                                   ((var-exp datum)))))
                                             (app-exp
                                               (var-exp list)
                                               ((lit-exp case-exp)
                                                 (app-exp
                                                   (var-exp
                                                     parse-expression)
                                                   ((app-exp
                                                      (var-exp cadr)
                                                      ((var-exp datum)))))
                                                 (app-exp
                                                   (var-exp map)
                                                   ((lambda-exp
                                                      (ls)
                                                      (app-exp
                                                        (var-exp list)
                                                        ((if-exp
                                                           (app-exp
                                                             (var-exp
                                                               equal?)
                                                             ((lit-exp
                                                                else)
                                                               (app-exp
                                                                 (var-exp
                                                                   car)
                                                                 ((var-exp
                                                                    ls)))))
                                                           (app-exp
                                                             (var-exp list)
                                                             ((app-exp
                                                                (var-exp
                                                                  parse-expression)
                                                                ((app-exp
                                                                   (var-exp
                                                                     cadr)
                                                                   ((var-exp
                                                                      datum)))))))
                                                           (app-exp
                                                             (var-exp map)
                                                             ((var-exp
                                                                parse-expression)
                                                               (app-exp
                                                                 (var-exp
                                                                   list)
                                                                 ((app-exp
                                                                    (var-exp
                                                                      car)
                                                                    ((var-exp
                                                                       ls))))))))
                                                          (app-exp
                                                            (var-exp
                                                              parse-expression)
                                                            ((app-exp
                                                               (var-exp
                                                                 cadr)
                                                               ((var-exp
                                                                  ls))))))))
                                                     (app-exp
                                                       (var-exp cddr)
                                                       ((var-exp
                                                          datum)))))))
                                             (if-exp
                                               (app-exp
                                                 (var-exp equal?)
                                                 ((lit-exp define)
                                                   (app-exp
                                                     (var-exp car)
                                                     ((var-exp datum)))))
                                               (app-exp
                                                 (var-exp list)
                                                 ((lit-exp define-exp)
                                                   (app-exp
                                                     (var-exp cadr)
                                                     ((var-exp datum)))
                                                   (app-exp
                                                     (var-exp
                                                       parse-expression)
                                                     ((app-exp
                                                        (var-exp caddr)
                                                        ((var-exp
                                                           datum)))))))
                                               (if-exp
                                                 (app-exp
                                                   (var-exp equal?)
                                                   ((app-exp
                                                      (var-exp car)
                                                      ((var-exp datum)))
                                                     (app-exp
                                                       (var-exp car)
                                                       ((var-exp datum)))))
                                                 (if-exp
                                                   (app-exp
                                                     (var-exp not)
                                                     ((app-exp
                                                        (var-exp list?)
                                                        ((app-exp
                                                           (var-exp cdr)
                                                           ((var-exp
                                                              datum)))))))
                                                   (lit-exp ())
                                                   (app-exp
                                                     (var-exp list)
                                                     ((lit-exp app-exp)
                                                       (app-exp
                                                         (var-exp
                                                           parse-expression)
                                                         ((app-exp
                                                            (var-exp car)
                                                            ((var-exp
                                                               datum)))))
                                                       (app-exp
                                                         (var-exp map)
                                                         ((var-exp
                                                            parse-expression)
                                                           (app-exp
                                                             (var-exp cdr)
                                                             ((var-exp
                                                                datum))))))))
                                                 ())))))))))))))))
                   (if-exp (lit-exp #t) (lit-exp ()) ()))))))))
     ()))
 (isvalid
   (closure-record
     (arg)
     (if-exp
       (app-exp (var-exp null?) ((var-exp arg)))
       (lit-exp #t)
       (if-exp
         (app-exp
           (var-exp not)
           ((app-exp (var-exp list?) ((var-exp arg)))))
         (lit-exp #f)
         (if-exp
           (app-exp
             (var-exp number?)
             ((app-exp (var-exp car) ((var-exp arg)))))
           (lit-exp #f)
           (if-exp
             (app-exp
               (var-exp null?)
               ((app-exp (var-exp cdr) ((var-exp arg)))))
             (lit-exp #f)
             (if-exp
               (app-exp
                 (var-exp not)
                 ((app-exp
                    (var-exp null?)
                    ((app-exp (var-exp cddr) ((var-exp arg)))))))
               (lit-exp #f)
               (if-exp (lit-exp #t) (lit-exp #t) ()))))))
     ()))
 (valid?
   (closure-record
     (args)
     (if-exp
       (app-exp (var-exp null?) ((var-exp args)))
       (lit-exp #t)
       (if-exp
         (lit-exp #t)
         (if-exp
           (app-exp
             (var-exp isvalid)
             ((app-exp (var-exp car) ((var-exp args)))))
           (app-exp
             (var-exp valid?)
             ((app-exp (var-exp cdr) ((var-exp args)))))
           (lit-exp #f))
         ()))
     ()))
 (param-list
   (closure-record
     (args)
     (if-exp
       (app-exp (var-exp null?) ((var-exp args)))
       (lit-exp ())
       (if-exp
         (app-exp (var-exp atom?) ((var-exp args)))
         (app-exp
           (var-exp cons)
           ((lit-exp variable)
             (app-exp (var-exp list) ((var-exp args)))))
         (if-exp
           (app-exp (var-exp list?) ((var-exp args)))
           (if-exp
             (app-exp
               (var-exp atom?)
               ((app-exp (var-exp car) ((var-exp args)))))
             (app-exp
               (var-exp append)
               ((app-exp
                  (var-exp list)
                  ((app-exp (var-exp car) ((var-exp args)))))
                 (app-exp
                   (var-exp param-list)
                   ((app-exp (var-exp cdr) ((var-exp args)))))))
             (if-exp
               (app-exp
                 (var-exp list?)
                 ((app-exp (var-exp car) ((var-exp args)))))
               (app-exp
                 (var-exp append)
                 ((app-exp
                    (var-exp list)
                    ((app-exp (var-exp car) ((var-exp args)))))
                   (app-exp
                     (var-exp param-list)
                     ((app-exp (var-exp cdr) ((var-exp args)))))))
               (app-exp
                 (var-exp append)
                 ((app-exp
                    (var-exp param-list)
                    ((app-exp (var-exp car) ((var-exp args)))))
                   (app-exp
                     (var-exp param-list)
                     ((app-exp (var-exp cdr) ((var-exp args)))))))))
           (if-exp
             (lit-exp #t)
             (app-exp
               (var-exp cons)
               ((lit-exp improper)
                 (app-exp
                   (var-exp list)
                   ((app-exp
                      (var-exp improper->proper)
                      ((var-exp args)))))))
             ()))))
     ()))
 (expression?
   (closure-record
     (exp)
     (if-exp
       (app-exp
         (var-exp null?)
         ((app-exp (var-exp car) ((var-exp exp)))))
       (lit-exp #t)
       (if-exp
         (app-exp
           (var-exp equal?)
           ((var-exp lit-exp) (app-exp (var-exp car) ((var-exp exp)))))
         (app-exp
           (var-exp scheme-value?)
           ((app-exp (var-exp cadr) ((var-exp exp)))))
         (if-exp
           (app-exp
             (var-exp equal?)
             ((var-exp var-exp) (app-exp (var-exp car) ((var-exp exp)))))
           (app-exp
             (lambda-exp
               (v)
               (app-exp
                 (lambda-exp
                   (sys-var tempVal)
                   (if-exp
                     (var-exp (sys-var tempVal))
                     (var-exp (sys-var tempVal))
                     (app-exp
                       (var-exp eqv?)
                       ((lit-exp sys-var)
                         (app-exp (var-exp car) ((var-exp v)))))))
                 ((app-exp (var-exp symbol?) ((var-exp v))))))
             ((app-exp (var-exp cadr) ((var-exp exp)))))
           (if-exp
             (app-exp
               (var-exp equal?)
               ((var-exp lambda-exp)
                 (app-exp (var-exp car) ((var-exp exp)))))
             (if-exp
               (app-exp
                 (lambda-exp
                   (var)
                   (app-exp
                     (lambda-exp
                       (sys-var tempVal)
                       (if-exp
                         (var-exp (sys-var tempVal))
                         (var-exp (sys-var tempVal))
                         (app-exp
                           (lambda-exp
                             (sys-var tempVal)
                             (if-exp
                               (var-exp (sys-var tempVal))
                               (var-exp (sys-var tempVal))
                               (app-exp
                                 (var-exp symbol?)
                                 ((var-exp var)))))
                           ((app-exp (var-exp pair?) ((var-exp var)))))))
                     ((app-exp
                        (app-exp (var-exp list-of) ((var-exp symbol?)))
                        ((var-exp var))))))
                 ((app-exp (var-exp cadr) ((var-exp exp)))))
               (app-exp
                 (var-exp expression?)
                 ((app-exp (var-exp caddr) ((var-exp exp)))))
               (lit-exp #f))
             (if-exp
               (app-exp
                 (var-exp equal?)
                 ((var-exp app-exp)
                   (app-exp (var-exp car) ((var-exp exp)))))
               (if-exp
                 (app-exp
                   (var-exp expression?)
                   ((app-exp (var-exp cadr) ((var-exp exp)))))
                 (app-exp
                   (app-exp (var-exp list-of) ((var-exp expression?)))
                   ((app-exp (var-exp caddr) ((var-exp exp)))))
                 (lit-exp #f))
               (if-exp
                 (app-exp
                   (var-exp equal?)
                   ((var-exp if-exp)
                     (app-exp (var-exp car) ((var-exp exp)))))
                 (if-exp
                   (app-exp
                     (var-exp expression?)
                     ((app-exp (var-exp cadr) ((var-exp exp)))))
                   (if-exp
                     (app-exp
                       (var-exp expression?)
                       ((app-exp (var-exp caddr) ((var-exp exp)))))
                     (app-exp
                       (var-exp expression?)
                       ((app-exp
                          (var-exp car)
                          ((app-exp (var-exp cdddr) ((var-exp exp)))))))
                     (lit-exp #f))
                   (lit-exp #f))
                 (if-exp
                   (app-exp
                     (var-exp equal?)
                     ((var-exp let-exp)
                       (app-exp (var-exp car) ((var-exp exp)))))
                   (if-exp
                     (app-exp
                       (app-exp (var-exp list-of) ((var-exp symbol?)))
                       ((app-exp (var-exp cadr) ((var-exp exp)))))
                     (if-exp
                       (app-exp
                         (app-exp
                           (var-exp list-of)
                           ((var-exp expression?)))
                         ((app-exp (var-exp caddr) ((var-exp exp)))))
                       (app-exp
                         (var-exp expression?)
                         ((app-exp
                            (var-exp car)
                            ((app-exp (var-exp cdddr) ((var-exp exp)))))))
                       (lit-exp #f))
                     (lit-exp #f))
                   (if-exp
                     (app-exp
                       (var-exp equal?)
                       ((var-exp named-let-exp)
                         (app-exp (var-exp car) ((var-exp exp)))))
                     (app-exp (var-exp name) ((var-exp symbol?)))
                     (if-exp
                       (app-exp
                         (var-exp equal?)
                         ((var-exp letrec-exp)
                           (app-exp (var-exp car) ((var-exp exp)))))
                       (app-exp
                         (var-exp symbols)
                         ((app-exp (var-exp list-of) ((var-exp symbol?)))))
                       (if-exp
                         (app-exp
                           (var-exp equal?)
                           ((var-exp let*-exp)
                             (app-exp (var-exp car) ((var-exp exp)))))
                         (app-exp
                           (var-exp symbols)
                           ((app-exp
                              (var-exp list-of)
                              ((var-exp symbol?)))))
                         (if-exp
                           (app-exp
                             (var-exp equal?)
                             ((var-exp set!-exp)
                               (app-exp (var-exp car) ((var-exp exp)))))
                           (app-exp (var-exp var) ((var-exp symbol?)))
                           (if-exp
                             (app-exp
                               (var-exp equal?)
                               ((var-exp begin-exp)
                                 (app-exp (var-exp car) ((var-exp exp)))))
                             (app-exp
                               (app-exp
                                 (var-exp list-of)
                                 ((var-exp expression?)))
                               ((app-exp (var-exp cadr) ((var-exp exp)))))
                             (if-exp
                               (app-exp
                                 (var-exp equal?)
                                 ((var-exp while-exp)
                                   (app-exp
                                     (var-exp car)
                                     ((var-exp exp)))))
                               (if-exp
                                 (app-exp
                                   (var-exp expression?)
                                   ((app-exp
                                      (var-exp cadr)
                                      ((var-exp exp)))))
                                 (app-exp
                                   (var-exp expression?)
                                   ((app-exp
                                      (var-exp caddr)
                                      ((var-exp exp)))))
                                 (lit-exp #f))
                               (if-exp
                                 (app-exp
                                   (var-exp equal?)
                                   ((var-exp and-exp)
                                     (app-exp
                                       (var-exp car)
                                       ((var-exp exp)))))
                                 (app-exp
                                   (app-exp
                                     (var-exp list-of)
                                     ((var-exp expression?)))
                                   ((app-exp
                                      (var-exp cadr)
                                      ((var-exp exp)))))
                                 (if-exp
                                   (app-exp
                                     (var-exp equal?)
                                     ((var-exp or-exp)
                                       (app-exp
                                         (var-exp car)
                                         ((var-exp exp)))))
                                   (app-exp
                                     (app-exp
                                       (var-exp list-of)
                                       ((var-exp expression?)))
                                     ((app-exp
                                        (var-exp cadr)
                                        ((var-exp exp)))))
                                   (if-exp
                                     (app-exp
                                       (var-exp equal?)
                                       ((var-exp cond-exp)
                                         (app-exp
                                           (var-exp car)
                                           ((var-exp exp)))))
                                     (app-exp
                                       (app-exp
                                         (var-exp list-of)
                                         ((lambda-exp
                                            (cd)
                                            (if-exp
                                              (app-exp
                                                (lambda-exp
                                                  (sys-var tempVal)
                                                  (if-exp
                                                    (var-exp
                                                      (sys-var tempVal))
                                                    (var-exp
                                                      (sys-var tempVal))
                                                    (app-exp
                                                      (var-exp
                                                        scheme-value?)
                                                      ((app-exp
                                                         (var-exp car)
                                                         ((var-exp
                                                            cd)))))))
                                                ((app-exp
                                                   (var-exp expression?)
                                                   ((app-exp
                                                      (var-exp car)
                                                      ((var-exp cd)))))))
                                              (app-exp
                                                (var-exp expression?)
                                                ((app-exp
                                                   (var-exp cadr)
                                                   ((var-exp cd)))))
                                              (lit-exp #f)))))
                                       ((app-exp
                                          (var-exp cadr)
                                          ((var-exp exp)))))
                                     (if-exp
                                       (app-exp
                                         (var-exp equal?)
                                         ((var-exp case-exp)
                                           (app-exp
                                             (var-exp car)
                                             ((var-exp exp)))))
                                       (if-exp
                                         (app-exp
                                           (var-exp expression?)
                                           ((app-exp
                                              (var-exp cadr)
                                              ((var-exp exp)))))
                                         (app-exp
                                           (app-exp
                                             (var-exp list-of)
                                             ((lambda-exp
                                                (cd)
                                                (if-exp
                                                  (app-exp
                                                    (app-exp
                                                      (var-exp list-of)
                                                      ((var-exp
                                                         expression?)))
                                                    ((app-exp
                                                       (var-exp car)
                                                       ((var-exp cd)))))
                                                  (app-exp
                                                    (var-exp expression?)
                                                    ((app-exp
                                                       (var-exp cadr)
                                                       ((var-exp cd)))))
                                                  (lit-exp #f)))))
                                           ((app-exp
                                              (var-exp caddr)
                                              ((var-exp exp)))))
                                         (lit-exp #f))
                                       (if-exp
                                         (app-exp
                                           (var-exp equal?)
                                           ((var-exp define-exp)
                                             (app-exp
                                               (var-exp car)
                                               ((var-exp exp)))))
                                         (if-exp
                                           (app-exp
                                             (var-exp symbol?)
                                             ((app-exp
                                                (var-exp cadr)
                                                ((var-exp exp)))))
                                           (app-exp
                                             (var-exp expression?)
                                             ((app-exp
                                                (var-exp caddr)
                                                ((var-exp exp)))))
                                           (lit-exp #f))
                                         (if-exp
                                           (app-exp
                                             (var-exp equal?)
                                             ((app-exp
                                                (var-exp car)
                                                ((var-exp exp)))
                                               (app-exp
                                                 (var-exp car)
                                                 ((var-exp exp)))))
                                           (lit-exp #f)
                                           ())))))))))))))))))))
     ()))
 (list-of
   (closure-record
     (improper (pred l))
     (app-exp
       (lambda-exp
         (all-preds)
         (begin-exp
           ((lambda-exp
              (obj)
              (app-exp
                (letrec-exp
                  (loop)
                  ((lambda-exp
                     (obj preds)
                     (begin-exp
                       ((app-exp
                          (lambda-exp
                            (sys-var tempVal)
                            (if-exp
                              (var-exp (sys-var tempVal))
                              (var-exp (sys-var tempVal))
                              (if-exp
                                (app-exp (var-exp null?) ((var-exp preds)))
                                (app-exp
                                  (var-exp loop)
                                  ((var-exp obj) (var-exp all-preds)))
                                (if-exp
                                  (app-exp (var-exp pair?) ((var-exp obj)))
                                  (if-exp
                                    (app-exp
                                      (app-exp
                                        (var-exp car)
                                        ((var-exp preds)))
                                      ((app-exp
                                         (var-exp car)
                                         ((var-exp obj)))))
                                    (app-exp
                                      (var-exp loop)
                                      ((app-exp
                                         (var-exp cdr)
                                         ((var-exp obj)))
                                        (app-exp
                                          (var-exp cdr)
                                          ((var-exp preds)))))
                                    (lit-exp #f))
                                  (lit-exp #f)))))
                          ((if-exp
                             (app-exp (var-exp null?) ((var-exp obj)))
                             (app-exp (var-exp null?) ((var-exp preds)))
                             (lit-exp #f))))))))
                  (var-exp loop))
                ((var-exp obj) (lit-exp ())))))))
       ((app-exp (var-exp cons) ((var-exp pred) (var-exp l)))))
     ()))
 (scheme-value? (closure-record (v) (lit-exp #t) ()))
 ((rep) ()) (+ (primitive +)) (- (primitive -))
 (* (primitive *)) (/ (primitive /)) (add1 (primitive add1))
 (sub1 (primitive sub1)) (max (primitive max))
 (zero? (primitive zero?)) (not (primitive not))
 (= (primitive =)) (< (primitive <)) (> (primitive >))
 (<= (primitive <=)) (>= (primitive >=))
 (cons (primitive cons)) (list (primitive list))
 (null? (primitive null?)) (eq? (primitive eq?))
 (equal? (primitive equal?)) (atom? (primitive atom?))
 (length (primitive length))
 (list->vector (primitive list->vector))
 (list? (primitive list?)) (pair? (primitive pair?))
 (procedure?
   (closure-record
     (proc)
     (if-exp
       (app-exp
         (var-exp equal?)
         ((var-exp closure-record)
           (app-exp (var-exp car) ((var-exp proc)))))
       (if-exp
         (app-exp
           (lambda-exp
             (id)
             (app-exp
               (lambda-exp
                 (sys-var tempVal)
                 (if-exp
                   (var-exp (sys-var tempVal))
                   (var-exp (sys-var tempVal))
                   (app-exp
                     (lambda-exp
                       (sys-var tempVal)
                       (if-exp
                         (var-exp (sys-var tempVal))
                         (var-exp (sys-var tempVal))
                         (app-exp (var-exp pair?) ((var-exp id)))))
                     ((app-exp (var-exp symbol?) ((var-exp id)))))))
               ((app-exp
                  (app-exp (var-exp list-of) ((var-exp symbol?)))
                  ((var-exp id))))))
           ((app-exp (var-exp cadr) ((var-exp proc)))))
         (if-exp
           (app-exp
             (var-exp expression?)
             ((app-exp (var-exp caddr) ((var-exp proc)))))
           (app-exp
             (var-exp environment?)
             ((app-exp
                (var-exp car)
                ((app-exp (var-exp cdddr) ((var-exp proc)))))))
           (lit-exp #f))
         (lit-exp #f))
       (if-exp
         (app-exp
           (var-exp equal?)
           ((var-exp primitive)
             (app-exp (var-exp car) ((var-exp proc)))))
         (app-exp
           (var-exp symbol?)
           ((app-exp (var-exp cadr) ((var-exp proc)))))
         (if-exp
           (app-exp
             (var-exp equal?)
             ((app-exp (var-exp car) ((var-exp proc)))
               (app-exp (var-exp car) ((var-exp proc)))))
           (lit-exp #f)
           ())))
     ()))
 (vector->list (primitive vector->list))
 (vector (primitive vector))
 (make-vector (primitive make-vector))
 (vector-ref (primitive vector-ref))
 (vector? (primitive vector?)) (number? (primitive number?))
 (symbol? (primitive symbol?))
 (set-car! (primitive set-car!))
 (set-cdr! (primitive set-cdr!))
 (vector-set! (primitive vector-set!)) (car (primitive car))
 (cdr (primitive cdr)) (caar (primitive caar))
 (cadr (primitive cadr)) (cdar (primitive cdar))
 (cddr (primitive cddr)) (caaar (primitive caaar))
 (load (primitive load)) (caadr (primitive caadr))
 (cadar (primitive cadar)) (cdaar (primitive cdaar))
 (cdddr (primitive cdddr)) (cddar (primitive cddar))
 (cdadr (primitive cdadr)) (caddr (primitive caddr))
 (map (primitive map)) (apply (primitive apply))
 (assq (primitive assq)) (assv (primitive assv))
 (append (primitive append)))
